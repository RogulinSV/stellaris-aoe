namespace = aoe_pirate_actions

# Replicant leader appearance
ship_event = {
    id = aoe_pirate_actions.1
    title = aoe_pirate_actions.1.title
    picture = GFX_aoe_replicant_leader_appearance
    show_sound = event_power_down
    location = root

    desc = {
        trigger = {
            exists = leader
            leader = {
                leader_class = admiral
            }
        }
        text = aoe_pirate_actions.1.desc_01
    }

    desc = {
        trigger = {
            exists = leader
            leader = {
                leader_class = general
            }
        }
        text = aoe_pirate_actions.1.desc_02
    }

    desc = {
        trigger = {
            exists = leader
            leader = {
                leader_class = scientist
            }
        }
        text = aoe_pirate_actions.1.desc_03
    }

    mean_time_to_happen = {
        days = 3000

        modifier = {
            factor = 0.95
            fleet = {
                distance_to_empire = {
                    who = owner
                    distance >= 5
                }
                exists = solar_system
                solar_system = {
                    NOT = {
                        exists = space_owner
                    }
                }
            }
        }
        modifier = {
            factor = 0.9
            fleet = {
                exists = owner
                distance_to_empire = {
                    who = owner
                    distance >= 10
                }
                exists = solar_system
                solar_system = {
                    NOT = {
                        exists = space_owner
                    }
                }
            }
        }
        modifier = {
            factor = 0.85
            fleet = {
                exists = owner
                distance_to_empire = {
                    who = owner
                    distance >= 20
                }
                exists = solar_system
                solar_system = {
                    NOT = {
                        exists = space_owner
                    }
                }
            }
        }
        modifier = {
            factor = 0.8
            fleet = {
                exists = owner
                distance_to_empire = {
                    who = owner
                    distance >= 40
                }
                exists = solar_system
                solar_system = {
                    NOT = {
                        exists = space_owner
                    }
                }
            }
        }
        modifier = {
            factor = 0.75
            fleet = {
                exists = owner
                distance_to_empire = {
                    who = owner
                    distance >= 80
                }
                exists = solar_system
                solar_system = {
                    NOT = {
                        exists = space_owner
                    }
                }
            }
        }
        modifier = {
            factor = 0.7
            fleet = {
                exists = owner
                distance_to_empire = {
                    who = owner
                    distance >= 150
                }
                exists = solar_system
                solar_system = {
                    NOT = {
                        exists = space_owner
                    }
                }
            }
        }
        modifier = {
            factor = 0.75
            fleet = {
                num_ships = 2
                exists = solar_system
                solar_system = {
                    NOT = {
                        exists = space_owner
                    }
                }
            }
        }
        modifier = {
            factor = 0.5
            fleet = {
                num_ships = 1
                exists = solar_system
                solar_system = {
                    NOT = {
                        exists = space_owner
                    }
                }
            }
        }
        modifier = {
            factor = 1.5
            exists = leader
            leader = {
                gender = female
            }
        }
        modifier = {
            factor = 0.1
            exists = leader
            leader = {
                has_trait = "leader_trait_fanatical"
            }
        }
    }

    trigger = {
        exists = leader
        exists = owner
        owner = {
            is_ai = no
            NOT = {
                has_country_flag = "replicant_leader_cooldown"
            }
        }
        fleet = {
            is_in_combat = no
        }
        NOT = {
            any_country = {
                is_country_type = "replicant"
                has_country_flag = replicant_country@root.owner
            }
        }
    }

    immediate = {
        reduce_hp_percent = 90
        fleet = {
            set_event_locked = yes
        }
        owner = {
            set_timed_country_flag = {
                flag = "replicant_leader_cooldown"
                days = 901
            }
        }
        leader = {
            save_event_target_as = "replicant_leader"
            exile_leader_as = "replicant_leader"
        }
    }

    option = {
        name = aoe_pirate_actions.1.a
        custom_tooltip = aoe_pirate_actions.1.a.tooltip
        trigger = {
            exists = event_target:replicant_leader
            event_target:replicant_leader = {
                leader_class = admiral
            }
        }
        hidden_effect = {
            enable_special_project = {
                name = "aoe_replicant_leader_appearance_admiral_project"
                location = root
                owner = root
            }
        }
    }

    option = {
        name = aoe_pirate_actions.1.b
        custom_tooltip = aoe_pirate_actions.1.b.tooltip
        trigger = {
            exists = event_target:replicant_leader
            event_target:replicant_leader = {
                leader_class = general
            }
        }
        hidden_effect = {
            enable_special_project = {
                name = "aoe_replicant_leader_appearance_general_project"
                location = root
                owner = root
            }
        }
    }

    option = {
        name = aoe_pirate_actions.1.c
        custom_tooltip = aoe_pirate_actions.1.c.tooltip
        trigger = {
            exists = event_target:replicant_leader
            event_target:replicant_leader = {
                leader_class = scientist
            }
        }
        hidden_effect = {
            enable_special_project = {
                name = "aoe_replicant_leader_appearance_scientist_project"
                location = root
                owner = root
            }
        }
    }

    option = {
        name = aoe_pirate_actions.1.d
        custom_tooltip = aoe_pirate_actions.1.d.tooltip
        hidden_effect = {
            owner = {
                country_event = {
                    id = aoe_pirate_actions.3
                    days = 600
                    random = 300
                }
            }
            fleet = {
                set_event_locked = no
                destroy_fleet = this
            }
        }
    }
}

# Replicant leader disclosure
# From: ship
# FromFrom: disabled ship
country_event = {
    id = aoe_pirate_actions.2
    title = aoe_pirate_actions.2.title
    picture = GFX_aoe_replicant_leader_disclosure
    show_sound = event_bad_omen
    is_triggered_only = yes
    location = fromfrom

    desc = {
        trigger = {
            event_target:replicant_leader = {
                leader_class = admiral
            }
        }
        text = aoe_pirate_actions.2.desc_01
    }

    desc = {
        trigger = {
            event_target:replicant_leader = {
                leader_class = general
            }
        }
        text = aoe_pirate_actions.2.desc_02
    }

    desc = {
        trigger = {
            event_target:replicant_leader = {
                leader_class = scientist
            }
        }
        text = aoe_pirate_actions.2.desc_03
    }

    trigger = {
        exists = event_target:replicant_leader
    }

    option = {
        name = aoe_pirate_actions.2.a
        custom_tooltip = aoe_pirate_actions.2.a.tooltip
        trigger = {
            event_target:replicant_leader = {
                species = {
                    OR = {
                        is_archetype = BIOLOGICAL
                        is_archetype = LITHOID
                    }
                }
            }
            any_owned_planet = {
                OR = {
                    has_building = "building_clinic"
                    has_building = "building_hospital"
                }
            }
            has_resource = {
                type = minerals
                amount > 500
            }
        }
        add_resource = {
            minerals = -500
        }
        hidden_effect = {
            fromfrom.fleet = {
                set_leader = replicant_leader
                leader = {
                    unassign_leader = this
                }
            }
        }
    }

    option = {
        name = aoe_pirate_actions.2.b
        custom_tooltip = aoe_pirate_actions.2.b.tooltip
        trigger = {
            event_target:replicant_leader = {
                species = {
                    OR = {
                        is_archetype = ROBOT
                        is_archetype = MACHINE
                    }
                }
            }
            any_owned_planet = {
                has_building = "building_maintenance_depot"
            }
            has_resource = {
                type = energy
                amount > 500
            }
        }
        add_resource = {
            energy = -500
        }
        hidden_effect = {
            fromfrom.fleet = {
                set_leader = replicant_leader
                leader = {
                    unassign_leader = this
                }
            }
        }
    }

    option = {
        name = aoe_pirate_actions.2.c
        custom_tooltip = aoe_pirate_actions.2.c.tooltip
        hidden_effect = {
            random_list = {
                5 = {
                    event_target:replicant_leader = {
                        kill_leader = {
                            show_notification = yes
                        }
                    }
                    random = {
                        chance = 50
                        from = {
                            reduce_hp_percent = 90
                        }
                        fromfrom = {
                            destroy_ship = this
                        }
                    }
                }
                5 = {
                    modifier = {
                        factor = 0
                        event_target:replicant_leader = {
                            has_trait = "leader_trait_fanatical"
                        }
                    }
                    event_target:replicant_leader = {
                        add_trait = "leader_trait_fanatical"
                    }
                    fromfrom.fleet = {
                        set_leader = replicant_leader
                        leader = {
                            unassign_leader = this
                        }
                    }
                }
            }
        }
    }
}

# Replicant country appearance
country_event = {
    id = aoe_pirate_actions.3
    title = aoe_pirate_actions.3.title
    picture = GFX_aoe_replicant_country_appearance
    show_sound = event_yellow_alert
    is_triggered_only = yes

    desc = {
        trigger = {
            event_target:replicant_leader = {
                leader_class = admiral
            }
        }
        text = aoe_pirate_actions.3.desc_01
    }

    desc = {
        trigger = {
            event_target:replicant_leader = {
                leader_class = general
            }
        }
        text = aoe_pirate_actions.3.desc_02
    }

    desc = {
        trigger = {
            event_target:replicant_leader = {
                leader_class = scientist
            }
        }
        text = aoe_pirate_actions.3.desc_03
    }

    trigger = {
        exists = event_target:replicant_leader
        any_system_within_border = {
            is_bordering_system = yes
        }
        NOT = {
            any_country = {
                is_country_type = "replicant"
                has_country_flag = replicant_country@root
            }
        }
    }

    immediate = {
        random_system_within_border = {
            limit = {
                is_bordering_system = yes
            }
            random_system = {
                limit = {
                    distance = {
                        source = prev
                        min_distance >= 10
                        max_distance <= 200
                    }
                    is_desolated_system = yes
                    NOT = {
                        any_neighbor_system = {
                            is_desolated_system = no
                        }
                    }
                }
                random_system_planet = {
                    # Creating ambient objects
                    create_ambient_object = {
                        type = "caravaneer_billboard_1"
                        scale = 4
                        location = this
                        entity_offset_height = { min = -9 max = -11 }
                    }
                    last_created_ambient_object = {
                        set_ambient_object_flag = "replicant_ambient_object"
                    }
                    # Creating replicant country
                    create_country = {
                        name = "NAME_Pirates"
                        type = "replicant"
                        species = event_target:replicant_leader.species
                        name_list = "PRT1"
                        flag = {
                            background = {
                                category = "backgrounds"
                                file = "00_solid.dds"
                            }
                            colors ={
                                "black"
                                "black"
                                "null"
                                "null"
                            }
                        }
                        effect = {
                            save_event_target_as = "replicant_country"
                            set_country_flag = replicant_country@root
                            if = {
                                limit = {
                                    root = {
                                        is_fallen_empire = yes
                                    }
                                }
                                set_country_flag = "fe_pirate"
                            }
                            else_if = {
                                limit = {
                                    root = {
                                        is_robot_empire = yes
                                    }
                                }
                                set_country_flag = "robot_pirate"
                            }
                            else_if = {
                                limit = {
                                    root = {
                                        is_lithoid_empire = yes
                                    }
                                }
                                set_country_flag = "lithoid_pirate"
                            }
                        }
                    }
                    last_created_country = {
                        randomize_flag_symbol = "pirate"
                        random_list = {
                            5 = {
                                modifier = {
                                    factor = 0
                                    root = {
                                        OR = {
                                            is_lithoid_empire = yes
                                            is_fallen_empire = yes
                                            is_robot_empire = yes
                                        }
                                    }
                                }
                                set_country_flag = "replicant_fleet_size_small"
                                set_country_flag = "replicant_leader_fanaticism_light"
                            }
                            10 = {
                                modifier = {
                                    factor = 0
                                    root = {
                                        OR = {
                                            is_lithoid_empire = yes
                                            is_fallen_empire = yes
                                            is_robot_empire = yes
                                        }
                                    }
                                }
                                set_country_flag = "replicant_fleet_size_small"
                                set_country_flag = "replicant_leader_fanaticism_medium"
                            }
                            15 = {
                                modifier = {
                                    factor = 0
                                    root = {
                                        OR = {
                                            is_lithoid_empire = yes
                                            is_fallen_empire = yes
                                            is_robot_empire = yes
                                        }
                                    }
                                }
                                set_country_flag = "replicant_fleet_size_small"
                                set_country_flag = "replicant_leader_fanaticism_heavy"
                            }
                            10 = {
                                set_country_flag = "replicant_fleet_size_normal"
                                set_country_flag = "replicant_leader_fanaticism_light"
                            }
                            15 = {
                                set_country_flag = "replicant_fleet_size_normal"
                                set_country_flag = "replicant_leader_fanaticism_medium"
                            }
                            20 = {
                                set_country_flag = "replicant_fleet_size_normal"
                                set_country_flag = "replicant_leader_fanaticism_heavy"
                            }
                            15 = {
                                modifier = {
                                    factor = 3
                                    root = {
                                        OR = {
                                            is_lithoid_empire = yes
                                            is_fallen_empire = yes
                                            is_robot_empire = yes
                                        }
                                    }
                                }
                                set_country_flag = "replicant_fleet_size_large"
                                set_country_flag = "replicant_leader_fanaticism_light"
                            }
                            20 = {
                                modifier = {
                                    factor = 3
                                    root = {
                                        OR = {
                                            is_lithoid_empire = yes
                                            is_fallen_empire = yes
                                            is_robot_empire = yes
                                        }
                                    }
                                }
                                set_country_flag = "replicant_fleet_size_large"
                                set_country_flag = "replicant_leader_fanaticism_medium"
                            }
                            25 = {
                                modifier = {
                                    factor = 3
                                    root = {
                                        OR = {
                                            is_lithoid_empire = yes
                                            is_fallen_empire = yes
                                            is_robot_empire = yes
                                        }
                                    }
                                }
                                set_country_flag = "replicant_fleet_size_large"
                                set_country_flag = "replicant_leader_fanaticism_heavy"
                            }
                        }
                    }
                }
                # Creating starbase
                if = {
                    limit = {
                        has_global_flag = "has_nsc_active"
                        root = {
                            is_fallen_empire = yes
                        }
                    }
                    create_starbase = {
                        owner = last_created_country
                        size = "starbase_headquarters"
                        module = "gun_battery"
                        module = "gun_battery"
                        module = "gun_battery"
                        module = "gun_battery"
                        module = "missile_battery"
                        module = "missile_battery"
                        module = "missile_battery"
                        module = "missile_battery"
                        building = "defense_grid"
                        building = "disruption_field"
                        building = "warp_fluctuator"

                        effect = {
                            while = {
                                count = 12
                                create_ship = {
                                    name = random
                                    design = "NAME_Devastator"
                                    graphical_culture = owner
                                }
                            }
                        }
                    }
                }
                else_if = {
                    limit = {
                        has_global_flag = "has_nsc_active"
                        root = {
                            is_robot_empire = yes
                        }
                    }
                    create_starbase = {
                        owner = last_created_country
                        size = "starbase_stronghold"
                        module = "gun_battery"
                        module = "gun_battery"
                        module = "gun_battery"
                        module = "gun_battery"
                        module = "missile_battery"
                        module = "missile_battery"
                        module = "missile_battery"
                        building = "defense_grid"
                        building = "target_uplink_computer"

                        effect = {
                            while = {
                                count = 9
                                create_ship = {
                                    name = random
                                    design = "NAME_Sigma"
                                    graphical_culture = owner
                                }
                            }
                        }
                    }
                }
                else_if = {
                    limit = {
                        root = {
                            is_lithoid_empire = yes
                        }
                    }
                    create_starbase = {
                        owner = last_created_country
                        size = "starbase_citadel"
                        module = "gun_battery"
                        module = "gun_battery"
                        module = "gun_battery"
                        module = "missile_battery"
                        module = "missile_battery"
                        module = "missile_battery"
                        building = "defense_grid"

                        effect = {
                            while = {
                                count = 7
                                create_ship = {
                                    name = random
                                    design = "NAME_AI_1"
                                    graphical_culture = owner
                                }
                            }
                        }
                    }
                }
                else = {
                    random_list = {
                        40 = {
                            create_starbase = {
                                size = "starbase_citadel"
                                owner = last_created_country
                                module = "gun_battery"
                                module = "gun_battery"
                                module = "gun_battery"
                                module = "missile_battery"
                                module = "missile_battery"

                                effect = {
                                    while = {
                                        count = 6
                                        create_ship = {
                                            name = random
                                            design = "NAME_AI_2"
                                            graphical_culture = owner
                                        }
                                    }
                                }
                            }
                        }
                        20 = {
                            create_starbase = {
                                size = "starbase_starfortress"
                                owner = last_created_country
                                module = "gun_battery"
                                module = "gun_battery"
                                module = "missile_battery"
                                module = "missile_battery"

                                effect = {
                                    while = {
                                        count = 5
                                        create_ship = {
                                            name = random
                                            design = "NAME_AI_2"
                                            graphical_culture = owner
                                        }
                                    }
                                }
                            }
                        }
                        10 = {
                            create_starbase = {
                                size = "starbase_starhold"
                                owner = last_created_country
                                module = "gun_battery"
                                module = "gun_battery"
                                module = "missile_battery"

                                effect = {
                                    while = {
                                        count = 4
                                        create_ship = {
                                            name = random
                                            design = "NAME_AI_2"
                                            graphical_culture = owner
                                        }
                                    }
                                }
                            }
                        }
                        5 = {
                            create_starbase = {
                                size = "starbase_starport"
                                owner = last_created_country
                                module = "gun_battery"
                                module = "gun_battery"

                                effect = {
                                    while = {
                                        count = 3
                                        create_ship = {
                                            name = random
                                            design = "NAME_AI_2"
                                            graphical_culture = owner
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                last_created_fleet = {
                    set_fleet_flag = "replicant_starbase"
                }
                # Creating ambient objects
                every_system_planet = {
                    limit = {
                        is_star = no
                        is_asteroid = no
                    }
                    while = {
                        count = 10
                        random_list = {
                            25 = {
                                solar_system = {
                                    create_ambient_object = {
                                        type = "small_debris_object"
                                        entity_offset_height = { min = -0 max = -25 }
                                    }
                                }
                            }
                            25 = {
                                solar_system = {
                                    create_ambient_object = {
                                        type = "medium_debris_01_object"
                                        entity_offset_height = { min = -0 max = -25 }
                                    }
                                }
                            }
                            25 = {
                                solar_system = {
                                    create_ambient_object = {
                                        type = "medium_debris_02_object"
                                        entity_offset_height = { min = -0 max = -25 }
                                    }
                                }
                            }
                            25 = {
                                solar_system = {
                                    create_ambient_object = {
                                        type = "large_debris_object"
                                        entity_offset_height = { min = -0 max = -25 }
                                    }
                                }
                            }
                        }
                        last_created_ambient_object = {
                            set_location = {
                                target = prev
                                distance = 50
                                angle = random
                            }
                            set_ambient_object_flag = "replicant_ambient_object"
                        }
                    }
                }
                # Creating dig site
                random_system = {
                    limit = {
                        distance = {
                            source = prev
                            min_distance >= 10
                            max_distance <= 50
                        }
                        NOR = {
                            is_occupied_system = yes
                            any_neighbor_system = {
                                exists = starbase
                                starbase = {
                                    exists = owner
                                    owner = {
                                        is_country_type = "replicant"
                                    }
                                }
                            }
                        }
                        any_system_planet = {
                            planet_size >= 10
                            has_anomaly = no
                            is_colony = no
                            is_asteroid = no
                            is_star = no
                            NOT = {
                                exists = archaeological_site
                            }
                        }
                    }
                    random_system_planet = {
                        limit = {
                            planet_size >= 10
                            has_anomaly = no
                            is_colony = no
                            is_asteroid = no
                            is_star = no
                            NOT = {
                                exists = archaeological_site
                            }
                        }
                        save_event_target_as = "replicant_digsite"
                        planet_event = {
                            id = aoe_pirate_actions.40
                            days = 150
                            random = 90
                        }
                    }
                }
            }
        }
        # Updating hostility
        every_country = {
            limit = {
                OR = {
                    is_country_type = "pirate"
                    is_country_type = "dormant_marauders"
                    is_country_type = "awakened_marauders"
                    is_country_type = "ruined_marauders"
                    is_country_type = "marauder_raiders"
                    is_country_type = "replicant"
                }
                NOT = {
                    is_same_value = last_created_country
                }
            }
            establish_communications_no_message = last_created_country
            set_faction_hostility = {
                target = last_created_country
                set_hostile = no
                set_neutral = no
                set_friendly = yes
            }
            last_created_country = {
                set_faction_hostility = {
                    target = prev
                    set_hostile = no
                    set_neutral = no
                    set_friendly = yes
                }
            }
        }
        # Establishing communications
        last_created_country = {
            every_neighbor_country = {
                limit = {
                    is_regular_empire = yes
                    NOT = {
                        has_communications = prev
                    }
                }
                establish_communications_no_message = prev
            }
        }
        set_relation_flag = {
            who = event_target:replicant_country
            flag = progenitor
        }
        # Beginning event chain
        begin_event_chain = {
            event_chain = "replicant_chain"
            target = root
        }
        set_country_flag = "replicant_progenitor"
    }

    option = {
        name = "aoe_pirate_actions.3.a"
        custom_tooltip = "aoe_pirate_actions.3.a.tooltip"
        trigger = {
            has_resource = {
                type = unity
                amount > 200
            }
        }
        add_resource = {
            unity = -200
        }
    }

    option = {
        name = "aoe_pirate_actions.3.b"
        custom_tooltip = "aoe_pirate_actions.3.b.tooltip"
        modify_species = {
            species = this
            add_trait = "trait_fanatical"
        }
        hidden_effect = {
            every_owned_pop = {
                limit = {
                    NOT = {
                        pop_has_trait = "trait_fanatical"
                    }
                }
                modify_species = {
                    species = this
                    add_trait = "trait_fanatical"
                }
            }
        }
    }
}

# Replicant station disabled
# This = Ship
# From = Disabler ship
ship_event = {
    id = aoe_pirate_actions.4
    is_triggered_only = yes
    hide_window = yes

    trigger = {
        exists = owner
        owner = {
            is_country_type = "replicant"
        }
        fleet = {
            has_fleet_flag = "replicant_starbase"
        }
    }

    immediate = {
        fleet = {
            solar_system = {
                every_system_ambient_object = {
                    limit = {
                        has_ambient_object_flag = "replicant_ambient_object"
                    }
                    destroy_ambient_object = this
                }
            }
        }
        if = {
            limit = {
                owner = {
                    count_owned_ships = {
                        limit = {
                            fleet = {
                                has_fleet_flag = "replicant_starbase"
                            }
                        }
                        count = 1
                    }
                }
            }
            random_country = {
                limit = {
                    has_relation_flag = {
                        who = root.owner
                        flag = progenitor
                    }
                }
                remove_relation_flag = {
                    who = root.owner
                    flag = progenitor
                }
                remove_country_flag = "replicant_progenitor"
                if = {
                    limit = {
                        has_trait = "trait_fanatical"
                    }
                    modify_species = {
                        species = this
                        remove_trait = "trait_fanatical"
                    }
                }
                every_owned_pop = {
                    limit = {
                        pop_has_trait = "trait_fanatical"
                    }
                    modify_species = {
                        species = this
                        remove_trait = "trait_fanatical"
                    }
                }
                if = {
                    limit = {
                        has_point_of_interest = {
                            poi = "replicant_coordinates"
                        }
                        root = {
                            is_point_of_interest = {
                                id = "replicant_coordinates"
                                owner = prev
                                event_chain = "replicant_chain"
                            }
                        }
                    }
                    remove_point_of_interest = "replicant_coordinates"
                }
                if = {
                    limit = {
                        has_event_chain = "replicant_chain"
                    }
                    end_event_chain = "replicant_chain"
                }
            }
            owner = {
                every_owned_leader = {
                    kill_leader = {
                        show_notification = no
                    }
                }
                every_owned_fleet = {
                    destroy_fleet = this
                }
                every_owned_planet = {
                    destroy_colony = yes
                }
                destroy_country = yes
            }
        }
        else = {
            random_country = {
                limit = {
                    has_relation_flag = {
                        who = root.owner
                        flag = progenitor
                    }
                }
                if = {
                    limit = {
                        has_point_of_interest = {
                            poi = "replicant_coordinates"
                        }
                        root = {
                            is_point_of_interest = {
                                id = "replicant_coordinates"
                                owner = prev
                                event_chain = "replicant_chain"
                            }
                        }
                    }
                    remove_point_of_interest = "replicant_coordinates"
                    root.owner = {
                        random_owned_starbase = {
                            save_event_target_as = "replicant_coordinates"
                        }
                        prev = {
                            create_point_of_interest = {
                                id = "replicant_coordinates"
                                name = "replicant_coordinates_poi"
                                desc = "replicant_coordinates_desc"
                                event_chain = "replicant_chain"
                                location = event_target:replicant_coordinates
                            }
                        }
                    }
                }
            }
            fleet = {
                destroy_fleet = this
            }
        }
        if = {
            limit = {
                from = {
                    exists = owner
                }
            }
            from.owner = {
                country_event = {
                    id = aoe_pirate_actions.5
                    days = 5
                }
            }
        }
    }
}

# Replicant country disappearance
country_event = {
    id = aoe_pirate_actions.5
    title = aoe_pirate_actions.5.title
    desc = aoe_pirate_actions.5.desc
    picture = GFX_aoe_replicant_country_disappearance
    show_sound = event_celebration
    is_triggered_only = yes
    location = fromfrom

    immediate = {
        great_artifact_reward = yes
    }

    option = {
        name = "aoe_pirate_actions.5.a"
        custom_tooltip = "aoe_pirate_actions.5.a.tooltip"
    }
}

# Replicant pop appearance
planet_event = {
    id = aoe_pirate_actions.6
    title = aoe_pirate_actions.6.title
    desc = aoe_pirate_actions.6.desc
    picture = GFX_aoe_replicant_pop_appearance
    show_sound = event_public_unrest
    location = root
    # force_open = yes

    mean_time_to_happen = {
        days = 1200

        modifier = {
            factor = 0.8
            planet_stability < @stabilitylevel2
        }
        modifier = {
            factor = 0.8
            planet_stability < @stabilitylevel1
        }
        modifier = {
            factor = 0.75
            is_recent_criminal_planet = yes
        }
        modifier = {
            factor = 0.5
            is_recent_unrest_planet = yes
        }
    }

    pre_triggers = {
        has_owner = yes
        has_ground_combat = no
        is_occupied_flag = no
    }

    trigger = {
        is_colony = yes
        num_pops > 0
        any_country = {
            is_country_type = "replicant"
            has_country_flag = replicant_country@root.owner
            NOT = {
                has_country_flag = "replicant_leader_general_exhausted"
            }
        }
        NOR = {
            has_planet_flag = "replicant_pop_cooldown"
            has_modifier = "planet_replicant_pressure"
            has_modifier = "planet_replicant_exposure"
        }
    }

    immediate = {
        random_list = {
            1 = {
                modifier = {
                    factor = 0
                    count_pops = {
                        limit = {
                            NOT = {
                                has_pop_flag = "replicant_pop"
                            }
                        }
                        count < 1
                    }
                }
                modifier = {
                    add = 1
                    num_pops >= 20
                }
                set_variable = {
                    which = "replicant_pop_count"
                    value = 1
                }
            }
            1 = {
                modifier = {
                    factor = 0
                    count_pops = {
                        limit = {
                            NOT = {
                                has_pop_flag = "replicant_pop"
                            }
                        }
                        count < 2
                    }
                }
                modifier = {
                    add = 1
                    num_pops >= 20
                }
                modifier = {
                    add = 1
                    num_pops >= 40
                }
                set_variable = {
                    which = "replicant_pop_count"
                    value = 2
                }
            }
            1 = {
                modifier = {
                    factor = 0
                    count_pops = {
                        limit = {
                            NOT = {
                                has_pop_flag = "replicant_pop"
                            }
                        }
                        count < 3
                    }
                }
                modifier = {
                    add = 1
                    num_pops >= 20
                }
                modifier = {
                    add = 1
                    num_pops >= 40
                }
                modifier = {
                    add = 1
                    num_pops >= 60
                }
                set_variable = {
                    which = "replicant_pop_count"
                    value = 3
                }
            }
            1 = {
                modifier = {
                    factor = 0
                    count_pops = {
                        limit = {
                            NOT = {
                                has_pop_flag = "replicant_pop"
                            }
                        }
                        count < 4
                    }
                }
                modifier = {
                    add = 1
                    num_pops >= 20
                }
                modifier = {
                    add = 1
                    num_pops >= 40
                }
                modifier = {
                    add = 1
                    num_pops >= 60
                }
                modifier = {
                    add = 1
                    num_pops >= 80
                }
                set_variable = {
                    which = "replicant_pop_count"
                    value = 4
                }
            }
            1 = {
                modifier = {
                    factor = 0
                    count_pops = {
                        limit = {
                            NOT = {
                                has_pop_flag = "replicant_pop"
                            }
                        }
                        count < 5
                    }
                }
                modifier = {
                    add = 1
                    num_pops >= 20
                }
                modifier = {
                    add = 1
                    num_pops >= 40
                }
                modifier = {
                    add = 1
                    num_pops >= 60
                }
                modifier = {
                    add = 1
                    num_pops >= 80
                }
                modifier = {
                    add = 1
                    num_pops >= 100
                }
                set_variable = {
                    which = "replicant_pop_count"
                    value = 5
                }
            }
        }
        create_pop = {
            species = owner_main_species
        }
        last_created_pop = {
            set_pop_flag = "replicant_leader"
        }
        while = {
            limit = {
                check_variable = {
                    which = "replicant_pop_count"
                    value > 0
                }
            }
            subtract_variable = {
                which = "replicant_pop_count"
                value = 1
            }
            random_owned_pop = {
                limit = {
                    NOT = {
                        has_pop_flag = "replicant_pop"
                    }
                }
                set_pop_flag = "replicant_pop"
                unemploy_pop = yes
                clear_pop_category = yes
            }
        }
        add_modifier = {
            modifier = "planet_replicant_pressure"
            days = -1
        }
    }

    option = {
        name = aoe_pirate_actions.6.a
        custom_tooltip = aoe_pirate_actions.6.a.tooltip
        trigger = {
            owner = {
                has_resource = {
                    type = influence
                    amount > 5
                }
            }
        }
        owner = {
            add_resource = {
                influence = -5
            }
        }
        hidden_effect = {
            if = {
                limit = {
                    count_pops = {
                        limit = {
                            has_pop_flag = "replicant_pop"
                        }
                        count = 2
                    }
                }
                planet_event = {
                    id = aoe_pirate_actions.7
                    days = 700
                    random = 200
                }
            }
            else_if = {
                limit = {
                    count_pops = {
                        limit = {
                            has_pop_flag = "replicant_pop"
                        }
                        count = 3
                    }
                }
                planet_event = {
                    id = aoe_pirate_actions.7
                    days = 500
                    random = 150
                }
            }
            else_if = {
                limit = {
                    count_pops = {
                        limit = {
                            has_pop_flag = "replicant_pop"
                        }
                        count = 4
                    }
                }
                planet_event = {
                    id = aoe_pirate_actions.7
                    days = 300
                    random = 100
                }
            }
            else_if = {
                limit = {
                    count_pops = {
                        limit = {
                            has_pop_flag = "replicant_pop"
                        }
                        count >= 5
                    }
                }
                planet_event = {
                    id = aoe_pirate_actions.7
                    days = 100
                    random = 50
                }
            }
            else = {
                planet_event = {
                    id = aoe_pirate_actions.7
                    days = 900
                }
            }
        }
    }

    option = {
        name = aoe_pirate_actions.6.b
        custom_tooltip = aoe_pirate_actions.6.b.tooltip
        hidden_effect = {
            planet_event = {
                id = aoe_pirate_actions.7
                days = 300
                random = 290
            }
        }
    }
}

# Replicant pop disappearance
planet_event = {
    id = aoe_pirate_actions.7
    title = aoe_pirate_actions.7.title
    desc = aoe_pirate_actions.7.desc
    picture = GFX_aoe_replicant_pop_disappearance
    show_sound = event_ground_battle
    is_triggered_only = yes
    location = root

    trigger = {
        has_modifier = "planet_replicant_pressure"
    }

    immediate = {
        remove_modifier = "planet_replicant_pressure"

        random_list = {
            1 = {
                set_variable = {
                    which = replicant_pop_leader_level
                    value = 1
                }
            }
            2 = {
                set_variable = {
                    which = replicant_pop_leader_level
                    value = 2
                }
            }
            4 = {
                set_variable = {
                    which = replicant_pop_leader_level
                    value = 3
                }
            }
            2 = {
                set_variable = {
                    which = replicant_pop_leader_level
                    value = 4
                }
            }
            1 = {
                set_variable = {
                    which = replicant_pop_leader_level
                    value = 5
                }
            }
        }
        random_owned_pop = {
            limit = {
                has_pop_flag = "replicant_leader"
            }
            remove_pop_flag = "replicant_leader"

            while = {
                limit = {
                    prev = {
                        check_variable = {
                            which = replicant_pop_leader_level
                            value > 0
                        }
                    }
                }
                prev = {
                    subtract_variable = {
                        which = replicant_pop_leader_level
                        value = 1
                    }
                }
                promote_intelligencer = yes
            }
            save_event_target_as = "espionage_origin_spy"
            prev = {
                save_event_target_as = "espionage_target_planet"
                owner = {
                    save_event_target_as = "espionage_target_country"
                }
            }
            random_country = {
                limit = {
                    is_country_type = "replicant"
                    has_country_flag = replicant_country@root.owner
                }
                save_event_target_as = "espionage_origin_country"
                try_commit_sabotage = yes
            }
            kill_pop = yes
            root.owner = {
                create_message = {
                    type = MESSAGE_REPLICANT_SPY
                    localization = MESSAGE_REPLICANT_SPY_ESCAPED_LOCALISATION
                    days = 30
                    target = this
                    variable = { type = name localization = ORIGIN_PLANET scope = root }
                    variable = { type = name localization = ORIGIN_SYSTEM scope = root.solar_system }
                }
            }
        }

        every_owned_pop = {
            limit = {
                has_pop_flag = "replicant_pop"
            }
            remove_pop_flag = "replicant_pop"

            if = {
                limit = {
                    OR = {
                        is_organic = yes
                        is_lithoid = yes
                    }
                }
                if = {
                    limit = {
                        is_deprivated_pop = no
                    }
                    pop_provoke_deprivation = yes
                    root.owner = {
                        create_message = {
                            type = MESSAGE_REPLICANT_POP
                            localization = MESSAGE_REPLICANT_POP_DEPRIVATED_LOCALISATION
                            days = 30
                            target = this
                            variable = { type = name localization = ORIGIN_PLANET scope = root }
                            variable = { type = name localization = ORIGIN_SYSTEM scope = root.solar_system }
                        }
                    }
                }
                else_if = {
                    limit = {
                        is_frustrated_pop = no
                    }
                    pop_provoke_frustration = yes
                    root.owner = {
                        create_message = {
                            type = MESSAGE_REPLICANT_POP
                            localization = MESSAGE_REPLICANT_POP_FRUSTRATED_LOCALISATION
                            days = 30
                            target = this
                            variable = { type = name localization = ORIGIN_PLANET scope = root }
                            variable = { type = name localization = ORIGIN_SYSTEM scope = root.solar_system }
                        }
                    }
                }
                else = {
                    kill_pop = yes
                    root.owner = {
                        create_message = {
                            type = MESSAGE_REPLICANT_POP
                            localization = MESSAGE_REPLICANT_POP_DISAPPEARED_LOCALISATION
                            days = 30
                            target = this
                            variable = { type = name localization = ORIGIN_PLANET scope = root }
                            variable = { type = name localization = ORIGIN_SYSTEM scope = root.solar_system }
                        }
                    }
                }
            }
            else_if = {
                limit = {
                    is_robot = yes
                }
                if = {
                    limit = {
                        is_malfunctioned_pop = no
                    }
                    pop_provoke_malfunction = yes
                    root.owner = {
                        create_message = {
                            type = MESSAGE_REPLICANT_POP
                            localization = MESSAGE_REPLICANT_POP_MULFUNCTIONED_LOCALISATION
                            days = 30
                            target = this
                            variable = { type = name localization = ORIGIN_PLANET scope = root }
                            variable = { type = name localization = ORIGIN_SYSTEM scope = root.solar_system }
                        }
                    }
                }
                else = {
                    kill_pop = yes
                    root.owner = {
                        create_message = {
                            type = MESSAGE_REPLICANT_POP
                            localization = MESSAGE_REPLICANT_POP_DISAPPEARED_LOCALISATION
                            days = 30
                            target = this
                            variable = { type = name localization = ORIGIN_PLANET scope = root }
                            variable = { type = name localization = ORIGIN_SYSTEM scope = root.solar_system }
                        }
                    }
                }
            }
            else = {
                kill_pop = yes
                root.owner = {
                    create_message = {
                        type = MESSAGE_REPLICANT_POP
                        localization = MESSAGE_REPLICANT_POP_DISAPPEARED_LOCALISATION
                        days = 30
                        target = this
                        variable = { type = name localization = ORIGIN_PLANET scope = root }
                        variable = { type = name localization = ORIGIN_SYSTEM scope = root.solar_system }
                    }
                }
            }
        }
    }

    option = {
        name = aoe_pirate_actions.7.a
        custom_tooltip = aoe_pirate_actions.7.a.tooltip
    }

    option = {
        name = aoe_pirate_actions.7.b
        custom_tooltip = aoe_pirate_actions.7.b.tooltip
        trigger = {
            any_owned_pop = {
                OR = {
                    is_deprivated_pop = yes
                    is_frustrated_pop = yes
                }
            }
            OR = {
                has_building = "building_clinic"
                has_building = "building_hospital"
            }
            owner = {
                has_resource = {
                    type = minerals
                    amount > 300
                }
            }
        }
        owner = {
            add_resource = {
                minerals = -300
            }
        }
        hidden_effect = {
            random_list = {
                2 = {
                    set_variable = {
                        which = "replicant_pop_count"
                        value = 1
                    }
                }
                4 = {
                    modifier = {
                        factor = 0
                        count_pops = {
                            limit = {
                                OR = {
                                    is_deprivated_pop = yes
                                    is_frustrated_pop = yes
                                }
                            }
                            count < 2
                        }
                    }
                    set_variable = {
                        which = "replicant_pop_count"
                        value = 2
                    }
                }
                6 = {
                    modifier = {
                        factor = 0
                        count_pops = {
                            limit = {
                                OR = {
                                    is_deprivated_pop = yes
                                    is_frustrated_pop = yes
                                }
                            }
                            count < 3
                        }
                    }
                    modifier = {
                        factor = 0.5
                        NOT = {
                            has_building = "building_hospital"
                        }
                    }
                    set_variable = {
                        which = "replicant_pop_count"
                        value = 3
                    }
                }
                4 = {
                    modifier = {
                        factor = 0
                        count_pops = {
                            limit = {
                                OR = {
                                    is_deprivated_pop = yes
                                    is_frustrated_pop = yes
                                }
                            }
                            count < 4
                        }
                    }
                    modifier = {
                        factor = 0
                        NOT = {
                            has_building = "building_hospital"
                        }
                    }
                    set_variable = {
                        which = "replicant_pop_count"
                        value = 4
                    }
                }
                2 = {
                    modifier = {
                        factor = 0
                        count_pops = {
                            limit = {
                                OR = {
                                    is_deprivated_pop = yes
                                    is_frustrated_pop = yes
                                }
                            }
                            count < 5
                        }
                    }
                    modifier = {
                        factor = 0
                        NOT = {
                            has_building = "building_hospital"
                        }
                    }
                    set_variable = {
                        which = "replicant_pop_count"
                        value = 5
                    }
                }
            }
            while = {
                limit = {
                    check_variable = {
                        which = "replicant_pop_count"
                        value > 0
                    }
                }
                subtract_variable = {
                    which = "replicant_pop_count"
                    value = 1
                }
                random_owned_pop = {
                    limit = {
                        OR = {
                            is_deprivated_pop = yes
                            is_frustrated_pop = yes
                        }
                    }
                    wipe_pop_deviations = yes
                }
            }
        }
    }

    option = {
        name = aoe_pirate_actions.7.c
        custom_tooltip = aoe_pirate_actions.7.c.tooltip
        trigger = {
            any_owned_pop = {
                is_malfunctioned_pop = yes
            }
            has_building = "building_maintenance_depot"
            owner = {
                has_resource = {
                    type = energy
                    amount > 300
                }
            }
        }
        owner = {
            add_resource = {
                energy = -300
            }
        }
        hidden_effect = {
            random_list = {
                2 = {
                    set_variable = {
                        which = "replicant_pop_count"
                        value = 1
                    }
                }
                4 = {
                    modifier = {
                        factor = 0
                        count_pops = {
                            limit = {
                                is_malfunctioned_pop = yes
                            }
                            count < 2
                        }
                    }
                    set_variable = {
                        which = "replicant_pop_count"
                        value = 2
                    }
                }
                6 = {
                    modifier = {
                        factor = 0
                        count_pops = {
                            limit = {
                                is_malfunctioned_pop = yes
                            }
                            count < 3
                        }
                    }
                    set_variable = {
                        which = "replicant_pop_count"
                        value = 3
                    }
                }
                4 = {
                    modifier = {
                        factor = 0
                        count_pops = {
                            limit = {
                                is_malfunctioned_pop = yes
                            }
                            count < 4
                        }
                    }
                    set_variable = {
                        which = "replicant_pop_count"
                        value = 4
                    }
                }
                2 = {
                    modifier = {
                        factor = 0
                        count_pops = {
                            limit = {
                                is_malfunctioned_pop = yes
                            }
                            count < 5
                        }
                    }
                    set_variable = {
                        which = "replicant_pop_count"
                        value = 5
                    }
                }
            }
            while = {
                limit = {
                    check_variable = {
                        which = "replicant_pop_count"
                        value > 0
                    }
                }
                subtract_variable = {
                    which = "replicant_pop_count"
                    value = 1
                }
                random_owned_pop = {
                    limit = {
                        is_malfunctioned_pop = yes
                    }
                    wipe_pop_deviations = yes
                }
            }
        }
    }
}

# Replicant pop disclosure
planet_event = {
    id = aoe_pirate_actions.8
    title = aoe_pirate_actions.8.title
    desc = aoe_pirate_actions.8.desc
    picture = GFX_aoe_replicant_pop_disclosure
    show_sound = event_mystic_reveal
    is_triggered_only = yes
    location = root

    trigger = {
        exists = owner
        has_modifier = "planet_replicant_pressure"
        has_modifier = "planet_replicant_exposure"
    }

    immediate = {
        every_owned_pop = {
            limit = {
                has_pop_flag = "replicant_pop"
            }
            remove_pop_flag = "replicant_pop"
        }
        remove_modifier = "planet_replicant_pressure"
    }

    option = {
        name = aoe_pirate_actions.8.a
        custom_tooltip = aoe_pirate_actions.8.a.tooltip
        owner = {
            add_resource = {
                unity = 100
            }
        }
        hidden_effect = {
            random_owned_pop = {
                limit = {
                    has_pop_flag = "replicant_leader"
                }
                remove_pop_flag = "replicant_leader"
                kill_pop = yes
                root.owner = {
                    create_message = {
                        type = MESSAGE_REPLICANT_SPY
                        localization = MESSAGE_REPLICANT_SPY_ESCAPED_LOCALISATION
                        days = 30
                        target = this
                        variable = { type = name localization = ORIGIN_PLANET scope = root }
                        variable = { type = name localization = ORIGIN_SYSTEM scope = root.solar_system }
                    }
                }
            }
        }
    }

    option = {
        name = aoe_pirate_actions.8.b
        custom_tooltip = aoe_pirate_actions.8.b.tooltip
        trigger = {
            any_owned_pop = {
                has_pop_flag = "replicant_leader"
            }
            owner = {
                has_event_chain = "replicant_chain"
                NOR = {
                    has_special_project = "aoe_replicant_leader_rescue_general_project"
                    has_completed_event_chain_counter = {
                        event_chain = "replicant_chain"
                        counter = "replicant_leader_general_saved_counter"
                    }
                }
            }
        }
        hidden_effect = {
            enable_special_project = {
                name = "aoe_replicant_leader_rescue_general_project"
                location = this
                owner = root.owner
            }
        }
    }

    option = {
        name = aoe_pirate_actions.8.c
        custom_tooltip = aoe_pirate_actions.8.c.tooltip
        trigger = {
            any_owned_pop = {
                has_pop_flag = "replicant_leader"
            }
            owner = {
                has_event_chain = "replicant_chain"
                has_special_project = "aoe_replicant_leader_rescue_general_project"
            }
        }
        hidden_effect = {
            owner = {
                abort_special_project = "aoe_replicant_leader_rescue_general_project"
            }
            enable_special_project = {
                name = "aoe_replicant_leader_rescue_general_project"
                location = this
                owner = root.owner
            }
        }
    }
}

# Contacts with replicants established
# From: Replicant Country
# This: Country
country_event = {
    id = aoe_pirate_actions.9
    hide_window = yes
    is_triggered_only = yes

    trigger = {
        from = {
            is_country_type = "replicant"
            has_country_flag = replicant_country@root
            any_owned_starbase = {
                always = yes
            }
        }
        has_event_chain = "replicant_chain"
    }

    immediate = {
        from = {
            random_owned_starbase = {
                save_event_target_as = "replicant_coordinates"
            }
        }
        create_point_of_interest = {
            id = "replicant_coordinates"
            name = "replicant_coordinates_poi"
            desc = "replicant_coordinates_desc"
            event_chain = "replicant_chain"
            location = event_target:replicant_coordinates
        }
    }
}

# Replicant defensive fleet appearance
country_event = {
    id = aoe_pirate_actions.10
    hide_window = yes

    mean_time_to_happen = {
        months = 24

        modifier = {
            factor = 0.8
            any_owned_starbase = {
                has_starbase_size = starbase_starhold
            }
        }
        modifier = {
            factor = 0.6
            any_owned_starbase = {
                has_starbase_size = starbase_starfortress
            }
        }
        modifier = {
            factor = 0.4
            any_owned_starbase = {
                has_starbase_size = starbase_citadel
            }
        }
        modifier = {
            factor = 0.2
            has_global_flag = "has_nsc_active"
            any_owned_starbase = {
                has_starbase_size = starbase_stronghold
            }
        }
        modifier = {
            factor = 0.1
            has_global_flag = "has_nsc_active"
            any_owned_starbase = {
                has_starbase_size = starbase_headquarters
            }
        }
    }

    trigger = {
        is_country_type = "replicant"
    }

    immediate = {
        if = {
            limit = {
                has_country_flag = "replicant_fleet_size_normal"
            }
            set_variable = {
                which = "replicant_fleet_size_pool"
                value = 3
            }
        }
        else_if = {
            limit = {
                has_country_flag = "replicant_fleet_size_large"
            }
            set_variable = {
                which = "replicant_fleet_size_pool"
                value = 4
            }
        }
        else = {
            set_variable = {
                which = "replicant_fleet_size_pool"
                value = 2
            }
        }
        every_owned_fleet = {
            limit = {
                has_fleet_flag = "replicant_fleet_role_defensive"
            }
            if = {
                limit = {
                    root = {
                        check_variable = {
                            which = "replicant_fleet_size_pool"
                            value > 0
                        }
                    }
                }
                root = {
                    subtract_variable = {
                        which = "replicant_fleet_size_pool"
                        value = 1
                    }
                }
            }
        }
        if = {
            limit = {
                check_variable = {
                    which = "replicant_fleet_size_pool"
                    value > 0
                }
            }
            create_leader = {
                class = admiral
                species = root.owner_species
                name = random
                skill = 1
                immortal = yes
                traits = {
                    trait = "leader_trait_fanatical"
                    trait = random_trait
                }
            }
            last_created_leader = {
                if = {
                    limit = {
                        root = {
                            has_country_flag = "fe_pirate"
                        }
                    }
                    add_skill = 8
                }
                else_if = {
                    limit = {
                        root = {
                            has_country_flag = "robot_pirate"
                        }
                    }
                    add_skill = 7
                }
                else_if = {
                    limit = {
                        root = {
                            has_country_flag = "lithoid_pirate"
                        }
                    }
                    add_skill = 6
                }
                else = {
                    random_list = {
                        1 = {
                            add_skill = 8
                        }
                        2 = {
                            add_skill = 7
                        }
                        5 = {
                            add_skill = 6
                        }
                        10 = {
                            add_skill = 5
                        }
                        25 = {
                            add_skill = 4
                        }
                        10 = {
                            add_skill = 3
                        }
                        5 = {
                            add_skill = 2
                        }
                        2 = {
                            add_skill = 1
                        }
                        1 = {
                        }
                    }
                }
            }
            create_fleet = {
                name = "NAME_Pirate_Patrol_Fleet"
                effect = {
                    set_owner = root
                    if = {
                        limit = {
                            root = {
                                has_country_flag = "fe_pirate"
                            }
                        }
                        random_list = {
                            100 = {
                                set_name = "NAME_Fallen_Empire_Pirate_Patrol_Fleet_10"
                                set_fleet_flag = "replicant_fleet_power_10"
                                create_pirate_ships_10 = yes
                            }
                            75 = {
                                set_name = "NAME_Fallen_Empire_Pirate_Patrol_Fleet_11"
                                set_fleet_flag = "replicant_fleet_power_11"
                                create_pirate_ships_11 = yes
                            }
                            50 = {
                                set_name = "NAME_Fallen_Empire_Pirate_Patrol_Fleet_12"
                                set_fleet_flag = "replicant_fleet_power_12"
                                create_pirate_ships_12 = yes
                            }
                            25 = {
                                set_name = "NAME_Fallen_Empire_Pirate_Patrol_Fleet_13"
                                set_fleet_flag = "replicant_fleet_power_13"
                                create_pirate_ships_13 = yes
                            }
                            10 = {
                                set_name = "NAME_Fallen_Empire_Pirate_Patrol_Fleet_14"
                                set_fleet_flag = "replicant_fleet_power_14"
                                create_pirate_ships_14 = yes
                            }
                            5 = {
                                set_name = "NAME_Fallen_Empire_Pirate_Patrol_Fleet_15"
                                set_fleet_flag = "replicant_fleet_power_15"
                                create_pirate_ships_15 = yes
                            }
                        }
                    }
                    else_if = {
                        limit = {
                            root = {
                                has_country_flag = "robot_pirate"
                            }
                        }
                        random_list = {
                            100 = {
                                set_name = "NAME_Robot_Pirate_Patrol_Fleet_9"
                                set_fleet_flag = "replicant_fleet_power_9"
                                create_pirate_ships_9 = yes
                            }
                            75 = {
                                set_name = "NAME_Robot_Pirate_Patrol_Fleet_10"
                                set_fleet_flag = "replicant_fleet_power_10"
                                create_pirate_ships_10 = yes
                            }
                            50 = {
                                set_name = "NAME_Robot_Pirate_Patrol_Fleet_11"
                                set_fleet_flag = "replicant_fleet_power_11"
                                create_pirate_ships_11 = yes
                            }
                            25 = {
                                set_name = "NAME_Robot_Pirate_Patrol_Fleet_12"
                                set_fleet_flag = "replicant_fleet_power_12"
                                create_pirate_ships_12 = yes
                            }
                            10 = {
                                set_name = "NAME_Robot_Pirate_Patrol_Fleet_13"
                                set_fleet_flag = "replicant_fleet_power_13"
                                create_pirate_ships_13 = yes
                            }
                            5 = {
                                set_name = "NAME_Robot_Pirate_Patrol_Fleet_14"
                                set_fleet_flag = "replicant_fleet_power_14"
                                create_pirate_ships_14 = yes
                            }
                            1 = {
                                set_name = "NAME_Robot_Pirate_Patrol_Fleet_15"
                                set_fleet_flag = "replicant_fleet_power_15"
                                create_pirate_ships_15 = yes
                            }
                        }
                    }
                    else_if = {
                        limit = {
                            root = {
                                has_country_flag = "lithoid_pirate"
                            }
                        }
                        random_list = {
                            100 = {
                                set_name = "NAME_Lithoid_Pirate_Patrol_Fleet_8"
                                set_fleet_flag = "replicant_fleet_power_8"
                                create_pirate_ships_8 = yes
                            }
                            75 = {
                                set_name = "NAME_Lithoid_Pirate_Patrol_Fleet_9"
                                set_fleet_flag = "replicant_fleet_power_9"
                                create_pirate_ships_9 = yes
                            }
                            50 = {
                                set_name = "NAME_Lithoid_Pirate_Patrol_Fleet_10"
                                set_fleet_flag = "replicant_fleet_power_10"
                                create_pirate_ships_10 = yes
                            }
                            25 = {
                                set_name = "NAME_Lithoid_Pirate_Patrol_Fleet_11"
                                set_fleet_flag = "replicant_fleet_power_11"
                                create_pirate_ships_11 = yes
                            }
                            10 = {
                                set_name = "NAME_Lithoid_Pirate_Patrol_Fleet_12"
                                set_fleet_flag = "replicant_fleet_power_12"
                                create_pirate_ships_12 = yes
                            }
                            5 = {
                                set_name = "NAME_Lithoid_Pirate_Patrol_Fleet_13"
                                set_fleet_flag = "replicant_fleet_power_13"
                                create_pirate_ships_13 = yes
                            }
                            2 = {
                                set_name = "NAME_Lithoid_Pirate_Patrol_Fleet_14"
                                set_fleet_flag = "replicant_fleet_power_14"
                                create_pirate_ships_14 = yes
                            }
                            1 = {
                                set_name = "NAME_Lithoid_Pirate_Patrol_Fleet_15"
                                set_fleet_flag = "replicant_fleet_power_15"
                                create_pirate_ships_15 = yes
                            }
                        }
                    }
                    else = {
                        random_list = {
                            1 = {
                                modifier = {
                                    factor = 2
                                    root = {
                                        any_owned_starbase = {
                                            has_starbase_size >= starbase_citadel
                                        }
                                    }
                                }
                                set_name = "NAME_Pirate_Patrol_Fleet_15"
                                set_fleet_flag = "replicant_fleet_power_15"
                                create_pirate_ships_15 = yes
                            }
                            2 = {
                                modifier = {
                                    factor = 2
                                    root = {
                                        any_owned_starbase = {
                                            has_starbase_size >= starbase_citadel
                                        }
                                    }
                                }
                                set_name = "NAME_Pirate_Patrol_Fleet_14"
                                set_fleet_flag = "replicant_fleet_power_14"
                                create_pirate_ships_14 = yes
                            }
                            4 = {
                                modifier = {
                                    factor = 2
                                    root = {
                                        any_owned_starbase = {
                                            has_starbase_size >= starbase_citadel
                                        }
                                    }
                                }
                                set_name = "NAME_Pirate_Patrol_Fleet_13"
                                set_fleet_flag = "replicant_fleet_power_13"
                                create_pirate_ships_13 = yes
                            }
                            6 = {
                                modifier = {
                                    factor = 2
                                    root = {
                                        any_owned_starbase = {
                                            has_starbase_size >= starbase_citadel
                                        }
                                    }
                                }
                                set_name = "NAME_Pirate_Patrol_Fleet_12"
                                set_fleet_flag = "replicant_fleet_power_12"
                                create_pirate_ships_12 = yes
                            }
                            8 = {
                                modifier = {
                                    factor = 2
                                    root = {
                                        any_owned_starbase = {
                                            has_starbase_size >= starbase_citadel
                                        }
                                    }
                                }
                                set_name = "NAME_Pirate_Patrol_Fleet_11"
                                set_fleet_flag = "replicant_fleet_power_11"
                                create_pirate_ships_11 = yes
                            }
                            12 = {
                                modifier = {
                                    factor = 2
                                    root = {
                                        any_owned_starbase = {
                                            has_starbase_size >= starbase_starfortress
                                        }
                                    }
                                }
                                set_name = "NAME_Pirate_Patrol_Fleet_10"
                                set_fleet_flag = "replicant_fleet_power_10"
                                create_pirate_ships_10 = yes
                            }
                            16 = {
                                modifier = {
                                    factor = 2
                                    root = {
                                        any_owned_starbase = {
                                            has_starbase_size >= starbase_starfortress
                                        }
                                    }
                                }
                                set_name = "NAME_Pirate_Patrol_Fleet_9"
                                set_fleet_flag = "replicant_fleet_power_9"
                                create_pirate_ships_9 = yes
                            }
                            20 = {
                                set_name = "NAME_Pirate_Patrol_Fleet_8"
                                set_fleet_flag = "replicant_fleet_power_8"
                                create_pirate_ships_8 = yes
                            }
                            30 = {
                                modifier = {
                                    factor = 0.5
                                    root = {
                                        any_owned_starbase = {
                                            has_starbase_size >= starbase_starfortress
                                        }
                                    }
                                }
                                set_name = "NAME_Pirate_Patrol_Fleet_7"
                                set_fleet_flag = "replicant_fleet_power_7"
                                create_pirate_ships_7 = yes
                            }
                            20 = {
                                modifier = {
                                    factor = 0.5
                                    root = {
                                        any_owned_starbase = {
                                            has_starbase_size >= starbase_starfortress
                                        }
                                    }
                                }
                                set_name = "NAME_Pirate_Patrol_Fleet_6"
                                set_fleet_flag = "replicant_fleet_power_6"
                                create_pirate_ships_6 = yes
                            }
                            16 = {
                                modifier = {
                                    factor = 0.5
                                    root = {
                                        any_owned_starbase = {
                                            has_starbase_size >= starbase_starhold
                                        }
                                    }
                                }
                                set_name = "NAME_Pirate_Patrol_Fleet_5"
                                set_fleet_flag = "replicant_fleet_power_5"
                                create_pirate_ships_5 = yes
                            }
                            12 = {
                                modifier = {
                                    factor = 0.5
                                    root = {
                                        any_owned_starbase = {
                                            has_starbase_size >= starbase_starhold
                                        }
                                    }
                                }
                                set_name = "NAME_Pirate_Patrol_Fleet_4"
                                set_fleet_flag = "replicant_fleet_power_4"
                                create_pirate_ships_4 = yes
                            }
                            6 = {
                                modifier = {
                                    factor = 0
                                    root = {
                                        any_owned_starbase = {
                                            has_starbase_size >= starbase_starhold
                                        }
                                    }
                                }
                                set_name = "NAME_Pirate_Patrol_Fleet_3"
                                set_fleet_flag = "replicant_fleet_power_3"
                                create_pirate_ships_3 = yes
                            }
                            4 = {
                                modifier = {
                                    factor = 0
                                    root = {
                                        any_owned_starbase = {
                                            has_starbase_size >= starbase_starhold
                                        }
                                    }
                                }
                                set_name = "NAME_Pirate_Patrol_Fleet_2"
                                set_fleet_flag = "replicant_fleet_power_2"
                                create_pirate_ships_2 = yes
                            }
                            2 = {
                                modifier = {
                                    factor = 0
                                    root = {
                                        any_owned_starbase = {
                                            has_starbase_size >= starbase_starhold
                                        }
                                    }
                                }
                                set_name = "NAME_Pirate_Patrol_Fleet_1"
                                set_fleet_flag = "replicant_fleet_power_1"
                                create_pirate_ships_1 = yes
                            }
                        }
                    }
                    assign_leader = last_created_leader
                    set_fleet_stance = aggressive
                    set_aggro_range_measure_from = self
                    set_aggro_range = 800
                    set_fleet_flag = "replicant_fleet_role_defensive"
                }
                settings = {
                    uses_naval_capacity = no
                }
            }
            random_owned_starbase = {
                fleet.solar_system.star = {
                    last_created_fleet = {
                        set_location = {
                            target = prev
                            distance = 10
                            angle = random
                        }
                    }
                }
            }
            last_created_fleet = {
                fleet_event = {
                    id = aoe_pirate_actions.20
                    days = 30
                    random = 25
                }
            }
            set_variable = {
                which = "replicant_fleet_size_pool"
                value = 0
            }
        }
    }
}

# Replicant country target selection
country_event = {
    id = aoe_pirate_actions.11
    hide_window = yes

    mean_time_to_happen = {
        months = 60

        modifier = {
            factor = 0.75
            has_country_flag = "replicant_leader_fanaticism_medium"
        }
        modifier = {
            factor = 0.5
            has_country_flag = "replicant_leader_fanaticism_heavy"
        }
        modifier = {
            factor = 0.7
            count_country = {
                count >= 3
                limit = {
                    is_neighbor_of = root
                    NOR = {
                        is_country_type = "pirate"
                        is_country_type = "dormant_marauders"
                        is_country_type = "awakened_marauders"
                        is_country_type = "ruined_marauders"
                        is_country_type = "marauder_raiders"
                        is_country_type = "replicant"
                    }
                }
            }
        }
        modifier = {
            factor = 0.8
            count_country = {
                count = 2
                limit = {
                    is_neighbor_of = root
                    NOR = {
                        is_country_type = "pirate"
                        is_country_type = "dormant_marauders"
                        is_country_type = "awakened_marauders"
                        is_country_type = "ruined_marauders"
                        is_country_type = "marauder_raiders"
                        is_country_type = "replicant"
                    }
                }
            }
        }
        modifier = {
            factor = 0.9
            count_country = {
                count = 1
                limit = {
                    is_neighbor_of = root
                    NOR = {
                        is_country_type = "pirate"
                        is_country_type = "dormant_marauders"
                        is_country_type = "awakened_marauders"
                        is_country_type = "ruined_marauders"
                        is_country_type = "marauder_raiders"
                        is_country_type = "replicant"
                    }
                }
            }
        }
    }

    trigger = {
        is_country_type = "replicant"
        NOT = {
            has_country_flag = "replicant_leader_admiral_exhausted"
        }
        any_owned_starbase = {
            fleet.solar_system = {
                closest_system = {
                    limit = {
                        exists = space_owner
                        space_owner = {
                            is_regular_empire = yes
                        }
                        distance = {
                            source = prev
                            use_bypasses = no
                            min_jumps = 1
                            max_jumps = 5
                        }
                        NOT = {
                            has_star_flag = replicant_target_system@root
                        }
                    }
                }
            }
        }
    }

    immediate = {
        every_owned_starbase = {
            fleet.solar_system = {
                closest_system = {
                    limit = {
                        exists = space_owner
                        space_owner = {
                            is_regular_empire = yes
                        }
                        distance = {
                            source = prev
                            use_bypasses = no
                            min_jumps = 1
                            max_jumps = 5
                        }
                        NOT = {
                            has_star_flag = replicant_target_system@root
                        }
                    }
                    log = ">>> aoe_pirate_actions.11: system [This.GetName] was selected"
                    save_event_target_as = replicant_target_system
                    set_timed_star_flag = {
                        flag = replicant_target_system@root
                        days = 600
                    }
                    root = {
                        save_event_target_as = replicant_country
                    }
                    prev = {
                        save_event_target_as = replicant_system
                    }
                    space_owner = {
                        log = ">>> aoe_pirate_actions.11: country [This.GetName] was selected"
                        save_event_target_as = replicant_target_country
                        set_timed_country_flag = {
                            flag = replicant_target_country@root
                            days = 600
                        }
                        if = {
                            limit = {
                                NOT = {
                                    has_communications = root
                                }
                            }
                            establish_communications_no_message = root
                        }
                        random_list = {
                            1 = {
                                modifier = {
                                    factor = 0
                                    OR = {
                                        is_lithoid_empire = yes
                                        is_robot_empire = yes
                                        root = {
                                            OR = {
                                                is_lithoid_empire = yes
                                                is_robot_empire = yes
                                            }
                                        }
                                    }
                                }
                                modifier = {
                                    factor = 0
                                    has_country_resource = {
                                        type = food
                                        amount < 1
                                    }
                                }
                                set_country_flag = "replicant_demand_food_resources"
                                intelligence_gather_resource_data = {
                                    ARG1 = food
                                }
                            }
                            1 = {
                                modifier = {
                                    factor = 0
                                    has_country_resource = {
                                        type = minerals
                                        amount < 1
                                    }
                                }
                                set_country_flag = "replicant_demand_minerals_resources"
                                intelligence_gather_resource_data = {
                                    ARG1 = minerals
                                }
                            }
                            1 = {
                                modifier = {
                                    factor = 0
                                    has_country_resource = {
                                        type = energy
                                        amount < 1
                                    }
                                }
                                set_country_flag = "replicant_demand_energy_resources"
                                intelligence_gather_resource_data = {
                                    ARG1 = energy
                                }
                            }
                            1 = {
                                modifier = {
                                    factor = 0
                                    has_country_resource = {
                                        type = alloys
                                        amount < 1
                                    }
                                }
                                set_country_flag = "replicant_demand_alloys_resources"
                                intelligence_gather_resource_data = {
                                    ARG1 = alloys
                                }
                            }
                            1 = {
                                modifier = {
                                    factor = 0
                                    has_country_resource = {
                                        type = consumer_goods
                                        amount < 1
                                    }
                                }
                                set_country_flag = "replicant_demand_consumer_goods_resources"
                                intelligence_gather_resource_data = {
                                    ARG1 = consumer_goods
                                }
                            }
                            1 = {
                                modifier = {
                                    factor = 0
                                    NOT = {
                                        any_owned_ship = {
                                            is_ship_class = shipclass_science_ship
                                        }
                                    }
                                }
                                set_country_flag = "replicant_demand_science_ships"
                                intelligence_gather_shipclass_data = {
                                    ARG1 = shipclass_science_ship
                                }
                            }
                            1 = {
                                modifier = {
                                    factor = 0
                                    NOT = {
                                        any_owned_ship = {
                                            is_ship_class = shipclass_constructor
                                        }
                                    }
                                }
                                set_country_flag = "replicant_demand_construction_ships"
                                intelligence_gather_shipclass_data = {
                                    ARG1 = shipclass_constructor
                                }
                            }
                            1 = {
                                modifier = {
                                    factor = 0
                                    NOT = {
                                        any_owned_ship = {
                                            is_ship_class = shipclass_transport
                                        }
                                    }
                                }
                                set_country_flag = "replicant_demand_transport_ships"
                                intelligence_gather_shipclass_data = {
                                    ARG1 = shipclass_transport
                                }
                            }
                            1 = {
                                modifier = {
                                    factor = 0
                                    OR = {
                                        NOT = {
                                            any_owned_ship = {
                                                is_ship_class = shipclass_military
                                                is_ship_size = corvette
                                            }
                                        }
                                        any_owned_ship = {
                                            is_ship_class = shipclass_military
                                            OR = {
                                                is_ship_size = destroyer
                                                is_ship_size = cruiser
                                                is_ship_size = battleship
                                                is_ship_size = colossus
                                            }
                                        }
                                    }
                                }
                                set_country_flag = "replicant_demand_corvette_ships"
                                intelligence_gather_ship_data = {
                                    ARG1 = corvette
                                }
                            }
                            1 = {
                                modifier = {
                                    factor = 0
                                    OR = {
                                        NOT = {
                                            any_owned_ship = {
                                                is_ship_class = shipclass_military
                                                is_ship_size = destroyer
                                            }
                                        }
                                        any_owned_ship = {
                                            is_ship_class = shipclass_military
                                            OR = {
                                                is_ship_size = cruiser
                                                is_ship_size = battleship
                                                is_ship_size = colossus
                                            }
                                        }
                                    }
                                }
                                set_country_flag = "replicant_demand_destroyer_ships"
                                intelligence_gather_ship_data = {
                                    ARG1 = destroyer
                                }
                            }
                            1 = {
                                modifier = {
                                    factor = 0
                                    OR = {
                                        NOT = {
                                            any_owned_ship = {
                                                is_ship_class = shipclass_military
                                                is_ship_size = cruiser
                                            }
                                        }
                                        any_owned_ship = {
                                            is_ship_class = shipclass_military
                                            OR = {
                                                is_ship_size = battleship
                                                is_ship_size = colossus
                                            }
                                        }
                                    }
                                }
                                set_country_flag = "replicant_demand_cruiser_ships"
                                intelligence_gather_ship_data = {
                                    ARG1 = cruiser
                                }
                            }
                            1 = {
                                modifier = {
                                    factor = 0
                                    OR = {
                                        NOT = {
                                            any_owned_ship = {
                                                is_ship_class = shipclass_military
                                                is_ship_size = battleship
                                            }
                                        }
                                        any_owned_ship = {
                                            is_ship_class = shipclass_military
                                            is_ship_size = colossus
                                        }
                                    }
                                }
                                set_country_flag = "replicant_demand_battleship_ships"
                                intelligence_gather_ship_data = {
                                    ARG1 = battleship
                                }
                            }
                            1 = {
                                modifier = {
                                    factor = 0
                                    NOT = {
                                        any_owned_ship = {
                                            is_ship_class = shipclass_military
                                            is_ship_size = colossus
                                        }
                                    }
                                }
                                set_country_flag = "replicant_demand_colossus_ships"
                                intelligence_gather_ship_data = {
                                    ARG1 = colossus
                                }
                            }
                            1 = {
                                modifier = {
                                    factor = 0
                                    NOT = {
                                        any_owned_leader = {
                                            leader_class = scientist
                                        }
                                    }
                                }
                                set_country_flag = "replicant_demand_scientist_leaders"
                                intelligence_gather_any_leader_data = {
                                    ARG1 = scientist
                                }
                            }
                            1 = {
                                modifier = {
                                    factor = 0
                                    NOT = {
                                        any_owned_leader = {
                                            leader_class = admiral
                                        }
                                    }
                                }
                                set_country_flag = "replicant_demand_admiral_leaders"
                                intelligence_gather_any_leader_data = {
                                    ARG1 = admiral
                                }
                            }
                            1 = {
                                modifier = {
                                    factor = 0
                                    NOT = {
                                        any_owned_leader = {
                                            leader_class = general
                                        }
                                    }
                                }
                                set_country_flag = "replicant_demand_general_leaders"
                                intelligence_gather_any_leader_data = {
                                    ARG1 = general
                                }
                            }
                            1 = {
                                modifier = {
                                    factor = 0
                                    NOT = {
                                        any_owned_leader = {
                                            leader_class = governor
                                        }
                                    }
                                }
                                set_country_flag = "replicant_demand_governor_leaders"
                                intelligence_gather_any_leader_data = {
                                    ARG1 = governor
                                }
                            }
                            10 = {
                                modifier = {
                                    factor = 0
                                    capital_scope.solar_system = {
                                        is_same_value = prevprev
                                    }
                                }
                                set_country_flag = "replicant_demand_system"
                            }
                            10 = {
                                modifier = {
                                    factor = 0
                                    prev = {
                                        NOT = {
                                            any_system_planet = {
                                                is_colony = yes
                                                OR = {
                                                    is_owned_by = event_target:replicant_target_country
                                                    is_controlled_by = event_target:replicant_target_country
                                                }
                                                count_pops = {
                                                    limit = {
                                                        OR = {
                                                            is_unemployed = yes
                                                            is_enslaved = yes
                                                            is_being_purged = yes
                                                        }
                                                        happiness < 0.5
                                                    }
                                                    count > 0
                                                }
                                            }
                                        }
                                    }
                                }
                                prev = {
                                    random_system_planet = {
                                        limit = {
                                            is_colony = yes
                                            OR = {
                                                is_owned_by = event_target:replicant_target_country
                                                is_controlled_by = event_target:replicant_target_country
                                            }
                                            count_pops = {
                                                limit = {
                                                    OR = {
                                                        is_unemployed = yes
                                                        is_enslaved = yes
                                                        is_being_purged = yes
                                                    }
                                                    happiness < 0.5
                                                }
                                                count > 0
                                            }
                                        }
                                        set_variable = {
                                            which = espionage_data_unhappy_pops_count
                                            value = 0
                                        }
                                        every_owned_pop = {
                                            limit = {
                                                OR = {
                                                    is_unemployed = yes
                                                    is_enslaved = yes
                                                    is_being_purged = yes
                                                }
                                                happiness < 0.5
                                            }
                                            prev = {
                                                change_variable = {
                                                    which = espionage_data_unhappy_pops_count
                                                    value = 1
                                                }
                                            }
                                        }
                                        save_event_target_as = replicant_target_planet
                                    }
                                }
                                set_country_flag = "replicant_demand_pops"
                            }
                        }
                        country_event = {
                            id = aoe_pirate_actions.12
                        }
                    }
                    break = yes
                }
            }
        }
    }
}

# Replicant country submission of claims
country_event = {
    id = aoe_pirate_actions.12
    title = aoe_pirate_actions.12.title
    show_sound = event_radio_chatter
    is_triggered_only = yes
    diplomatic = yes

    picture_event_data = {
        portrait = event_target:replicant_country
        room = replicant_starbase_1_room
    }

    desc = {
        trigger = {
            has_country_flag = "replicant_demand_food_resources"
        }
        text = aoe_pirate_actions.12.desc_01
    }
    desc = {
        trigger = {
            has_country_flag = "replicant_demand_minerals_resources"
        }
        text = aoe_pirate_actions.12.desc_02
    }
    desc = {
        trigger = {
            has_country_flag = "replicant_demand_energy_resources"
        }
        text = aoe_pirate_actions.12.desc_03
    }
    desc = {
        trigger = {
            has_country_flag = "replicant_demand_alloys_resources"
        }
        text = aoe_pirate_actions.12.desc_04
    }
    desc = {
        trigger = {
            has_country_flag = "replicant_demand_consumer_goods_resources"
        }
        text = aoe_pirate_actions.12.desc_05
    }
    desc = {
        trigger = {
            has_country_flag = "replicant_demand_science_ships"
        }
        text = aoe_pirate_actions.12.desc_06
    }
    desc = {
        trigger = {
            has_country_flag = "replicant_demand_construction_ships"
        }
        text = aoe_pirate_actions.12.desc_07
    }
    desc = {
        trigger = {
            has_country_flag = "replicant_demand_transport_ships"
        }
        text = aoe_pirate_actions.12.desc_08
    }
    desc = {
        trigger = {
            has_country_flag = "replicant_demand_corvette_ships"
        }
        text = aoe_pirate_actions.12.desc_09
    }
    desc = {
        trigger = {
            has_country_flag = "replicant_demand_destroyer_ships"
        }
        text = aoe_pirate_actions.12.desc_10
    }
    desc = {
        trigger = {
            has_country_flag = "replicant_demand_cruiser_ships"
        }
        text = aoe_pirate_actions.12.desc_11
    }
    desc = {
        trigger = {
            has_country_flag = "replicant_demand_battleship_ships"
        }
        text = aoe_pirate_actions.12.desc_12
    }
    desc = {
        trigger = {
            has_country_flag = "replicant_demand_colossus_ships"
        }
        text = aoe_pirate_actions.12.desc_13
    }
    desc = {
        trigger = {
            has_country_flag = "replicant_demand_scientist_leaders"
        }
        text = aoe_pirate_actions.12.desc_20
    }
    desc = {
        trigger = {
            has_country_flag = "replicant_demand_admiral_leaders"
        }
        text = aoe_pirate_actions.12.desc_21
    }
    desc = {
        trigger = {
            has_country_flag = "replicant_demand_general_leaders"
        }
        text = aoe_pirate_actions.12.desc_22
    }
    desc = {
        trigger = {
            has_country_flag = "replicant_demand_governor_leaders"
        }
        text = aoe_pirate_actions.12.desc_23
    }
    desc = {
        trigger = {
            has_country_flag = "replicant_demand_system"
        }
        text = aoe_pirate_actions.12.desc_24
    }
    desc = {
        trigger = {
            has_country_flag = "replicant_demand_pops"
        }
        text = aoe_pirate_actions.12.desc_25
    }
    desc = {
        trigger = {
            NOR = {
                has_country_flag = "replicant_demand_food_resources"
                has_country_flag = "replicant_demand_minerals_resources"
                has_country_flag = "replicant_demand_energy_resources"
                has_country_flag = "replicant_demand_alloys_resources"
                has_country_flag = "replicant_demand_consumer_goods_resources"
                has_country_flag = "replicant_demand_science_ships"
                has_country_flag = "replicant_demand_construction_ships"
                has_country_flag = "replicant_demand_transport_ships"
                has_country_flag = "replicant_demand_corvette_ships"
                has_country_flag = "replicant_demand_destroyer_ships"
                has_country_flag = "replicant_demand_cruiser_ships"
                has_country_flag = "replicant_demand_battleship_ships"
                has_country_flag = "replicant_demand_colossus_ships"
                has_country_flag = "replicant_demand_scientist_leaders"
                has_country_flag = "replicant_demand_admiral_leaders"
                has_country_flag = "replicant_demand_general_leaders"
                has_country_flag = "replicant_demand_governor_leaders"
                has_country_flag = "replicant_demand_system"
                has_country_flag = "replicant_demand_pops"
            }
        }
        text = aoe_pirate_actions.12.desc_50
    }

    trigger = {
        exists = event_target:replicant_country
    }

    after = {
        if = {
            limit = { has_country_flag = "replicant_demand_food_resources" }
            remove_country_flag = "replicant_demand_food_resources"
        }
        if = {
            limit = { has_country_flag = "replicant_demand_minerals_resources" }
            remove_country_flag = "replicant_demand_minerals_resources"
        }
        if = {
            limit = { has_country_flag = "replicant_demand_energy_resources" }
            remove_country_flag = "replicant_demand_energy_resources"
        }
        if = {
            limit = { has_country_flag = "replicant_demand_alloys_resources" }
            remove_country_flag = "replicant_demand_alloys_resources"
        }
        if = {
            limit = { has_country_flag = "replicant_demand_consumer_goods_resources" }
            remove_country_flag = "replicant_demand_consumer_goods_resources"
        }
        if = {
            limit = { has_country_flag = "replicant_demand_science_ships" }
            remove_country_flag = "replicant_demand_science_ships"
        }
        if = {
            limit = { has_country_flag = "replicant_demand_construction_ships" }
            remove_country_flag = "replicant_demand_construction_ships"
        }
        if = {
            limit = { has_country_flag = "replicant_demand_transport_ships" }
            remove_country_flag = "replicant_demand_transport_ships"
        }
        if = {
            limit = { has_country_flag = "replicant_demand_corvette_ships" }
            remove_country_flag = "replicant_demand_corvette_ships"
        }
        if = {
            limit = { has_country_flag = "replicant_demand_destroyer_ships" }
            remove_country_flag = "replicant_demand_destroyer_ships"
        }
        if = {
            limit = { has_country_flag = "replicant_demand_cruiser_ships" }
            remove_country_flag = "replicant_demand_cruiser_ships"
        }
        if = {
            limit = { has_country_flag = "replicant_demand_battleship_ships" }
            remove_country_flag = "replicant_demand_battleship_ships"
        }
        if = {
            limit = { has_country_flag = "replicant_demand_colossus_ships" }
            remove_country_flag = "replicant_demand_colossus_ships"
        }
        if = {
            limit = { has_country_flag = "replicant_demand_scientist_leaders" }
            remove_country_flag = "replicant_demand_scientist_leaders"
        }
        if = {
            limit = { has_country_flag = "replicant_demand_admiral_leaders" }
            remove_country_flag = "replicant_demand_admiral_leaders"
        }
        if = {
            limit = { has_country_flag = "replicant_demand_general_leaders" }
            remove_country_flag = "replicant_demand_general_leaders"
        }
        if = {
            limit = { has_country_flag = "replicant_demand_governor_leaders" }
            remove_country_flag = "replicant_demand_governor_leaders"
        }
        if = {
            limit = { has_country_flag = "replicant_demand_system" }
            remove_country_flag = "replicant_demand_system"
        }
        if = {
            limit = { has_country_flag = "replicant_demand_pops" }
            remove_country_flag = "replicant_demand_pops"
        }
        if = {
            limit = {
                exists = event_target:replicant_target_planet
                event_target:replicant_target_planet = {
                    check_variable = {
                        which = espionage_data_unhappy_pops_count
                        value > 0
                    }
                }
            }
            event_target:replicant_target_planet = {
                set_variable = {
                    which = espionage_data_unhappy_pops_count
                    value = 0
                }
            }
        }
    }

    option = {
        name = "aoe_pirate_actions.12.a"
        custom_tooltip = "aoe_pirate_actions.12.a.tooltip"
        ai_chance = {
            factor = 10
            modifier = {
                factor = 10
                has_ethic = "ethic_fanatic_pacifist"
            }
            modifier = {
                factor = 5
                has_ethic = "ethic_pacifist"
            }
            modifier = {
                factor = 10
                relative_power = {
                    who = event_target:replicant_country
                    category = fleet
                    value = inferior
                }
            }
            modifier = {
                factor = 5
                relative_power = {
                    who = event_target:replicant_country
                    category = fleet
                    value = pathetic
                }
            }
        }
        trigger = {
            has_country_flag = "replicant_demand_food_resources"
            has_country_resource = {
                type = food
                amount > 10
            }
        }
        hidden_effect = {
            withdraw_stockpile_resource = {
                ARG1 = food
                ARG2 = 10
            }
        }
    }

    option = {
        name = "aoe_pirate_actions.12.b"
        custom_tooltip = "aoe_pirate_actions.12.b.tooltip"
        ai_chance = {
            factor = 10
            modifier = {
                factor = 10
                has_ethic = "ethic_fanatic_pacifist"
            }
            modifier = {
                factor = 5
                has_ethic = "ethic_pacifist"
            }
            modifier = {
                factor = 10
                relative_power = {
                    who = event_target:replicant_country
                    category = fleet
                    value = inferior
                }
            }
            modifier = {
                factor = 5
                relative_power = {
                    who = event_target:replicant_country
                    category = fleet
                    value = pathetic
                }
            }
        }
        trigger = {
            has_country_flag = "replicant_demand_minerals_resources"
            has_country_resource = {
                type = minerals
                amount > 10
            }
        }
        hidden_effect = {
            withdraw_stockpile_resource = {
                ARG1 = minerals
                ARG2 = 10
            }
        }
    }

    option = {
        name = "aoe_pirate_actions.12.c"
        custom_tooltip = "aoe_pirate_actions.12.c.tooltip"
        ai_chance = {
            factor = 10
            modifier = {
                factor = 10
                has_ethic = "ethic_fanatic_pacifist"
            }
            modifier = {
                factor = 5
                has_ethic = "ethic_pacifist"
            }
            modifier = {
                factor = 10
                relative_power = {
                    who = event_target:replicant_country
                    category = fleet
                    value = inferior
                }
            }
            modifier = {
                factor = 5
                relative_power = {
                    who = event_target:replicant_country
                    category = fleet
                    value = pathetic
                }
            }
        }
        trigger = {
            has_country_flag = "replicant_demand_energy_resources"
            has_country_resource = {
                type = energy
                amount > 10
            }
        }
        hidden_effect = {
            withdraw_stockpile_resource = {
                ARG1 = energy
                ARG2 = 10
            }
        }
    }

    option = {
        name = "aoe_pirate_actions.12.d"
        custom_tooltip = "aoe_pirate_actions.12.d.tooltip"
        ai_chance = {
            factor = 10
            modifier = {
                factor = 10
                has_ethic = "ethic_fanatic_pacifist"
            }
            modifier = {
                factor = 5
                has_ethic = "ethic_pacifist"
            }
            modifier = {
                factor = 10
                relative_power = {
                    who = event_target:replicant_country
                    category = fleet
                    value = inferior
                }
            }
            modifier = {
                factor = 5
                relative_power = {
                    who = event_target:replicant_country
                    category = fleet
                    value = pathetic
                }
            }
        }
        trigger = {
            has_country_flag = "replicant_demand_alloys_resources"
            has_country_resource = {
                type = alloys
                amount > 10
            }
        }
        hidden_effect = {
            withdraw_stockpile_resource = {
                ARG1 = alloys
                ARG2 = 10
            }
        }
    }

    option = {
        name = "aoe_pirate_actions.12.e"
        custom_tooltip = "aoe_pirate_actions.12.e.tooltip"
        ai_chance = {
            factor = 10
            modifier = {
                factor = 10
                has_ethic = "ethic_fanatic_pacifist"
            }
            modifier = {
                factor = 5
                has_ethic = "ethic_pacifist"
            }
            modifier = {
                factor = 10
                relative_power = {
                    who = event_target:replicant_country
                    category = fleet
                    value = inferior
                }
            }
            modifier = {
                factor = 5
                relative_power = {
                    who = event_target:replicant_country
                    category = fleet
                    value = pathetic
                }
            }
        }
        trigger = {
            has_country_flag = "replicant_demand_consumer_goods_resources"
            has_country_resource = {
                type = consumer_goods
                amount > 10
            }
        }
        hidden_effect = {
            withdraw_stockpile_resource = {
                ARG1 = consumer_goods
                ARG2 = 10
            }
        }
    }

    option = {
        name = "aoe_pirate_actions.12.f"
        custom_tooltip = "aoe_pirate_actions.12.f.tooltip"
        ai_chance = {
            factor = 10
            modifier = {
                factor = 10
                has_ethic = "ethic_fanatic_pacifist"
            }
            modifier = {
                factor = 5
                has_ethic = "ethic_pacifist"
            }
            modifier = {
                factor = 10
                relative_power = {
                    who = event_target:replicant_country
                    category = fleet
                    value = inferior
                }
            }
            modifier = {
                factor = 5
                relative_power = {
                    who = event_target:replicant_country
                    category = fleet
                    value = pathetic
                }
            }
        }
        trigger = {
            has_country_flag = "replicant_demand_science_ships"
            any_owned_ship = {
                is_ship_class = shipclass_science_ship
            }
        }
        hidden_effect = {
            every_owned_ship = {
                limit = {
                    is_ship_class = shipclass_science_ship
                }
                if = {
                    limit = {
                        exists = leader
                    }
                    leader = {
                        unassign_leader = this
                    }
                }
                delete_ship = this
            }
        }
    }

    option = {
        name = "aoe_pirate_actions.12.g"
        custom_tooltip = "aoe_pirate_actions.12.g.tooltip"
        ai_chance = {
            factor = 10
            modifier = {
                factor = 10
                has_ethic = "ethic_fanatic_pacifist"
            }
            modifier = {
                factor = 5
                has_ethic = "ethic_pacifist"
            }
            modifier = {
                factor = 10
                relative_power = {
                    who = event_target:replicant_country
                    category = fleet
                    value = inferior
                }
            }
            modifier = {
                factor = 5
                relative_power = {
                    who = event_target:replicant_country
                    category = fleet
                    value = pathetic
                }
            }
        }
        trigger = {
            has_country_flag = "replicant_demand_construction_ships"
            any_owned_ship = {
                is_ship_class = shipclass_constructor
            }
        }
        hidden_effect = {
            every_owned_ship = {
                limit = {
                    is_ship_class = shipclass_constructor
                }
                delete_ship = this
            }
        }
    }

    option = {
        name = "aoe_pirate_actions.12.h"
        custom_tooltip = "aoe_pirate_actions.12.h.tooltip"
        ai_chance = {
            factor = 10
            modifier = {
                factor = 10
                has_ethic = "ethic_fanatic_pacifist"
            }
            modifier = {
                factor = 5
                has_ethic = "ethic_pacifist"
            }
            modifier = {
                factor = 10
                relative_power = {
                    who = event_target:replicant_country
                    category = fleet
                    value = inferior
                }
            }
            modifier = {
                factor = 5
                relative_power = {
                    who = event_target:replicant_country
                    category = fleet
                    value = pathetic
                }
            }
        }
        trigger = {
            has_country_flag = "replicant_demand_transport_ships"
            any_owned_fleet = {
                is_ship_class = shipclass_transport
            }
        }
        hidden_effect = {
            every_owned_ship = {
                limit = {
                    is_ship_class = shipclass_transport
                }
                if = {
                    limit = {
                        exists = leader
                    }
                    leader = {
                        unassign_leader = this
                    }
                }
                delete_ship = this
            }
        }
    }

    option = {
        name = "aoe_pirate_actions.12.j"
        custom_tooltip = "aoe_pirate_actions.12.j.tooltip"
        ai_chance = {
            factor = 10
            modifier = {
                factor = 10
                has_ethic = "ethic_fanatic_pacifist"
            }
            modifier = {
                factor = 5
                has_ethic = "ethic_pacifist"
            }
            modifier = {
                factor = 10
                relative_power = {
                    who = event_target:replicant_country
                    category = fleet
                    value = inferior
                }
            }
            modifier = {
                factor = 5
                relative_power = {
                    who = event_target:replicant_country
                    category = fleet
                    value = pathetic
                }
            }
        }
        trigger = {
            has_country_flag = "replicant_demand_corvette_ships"
            any_owned_fleet = {
                is_ship_class = shipclass_military
                is_ship_size = corvette
            }
        }
        hidden_effect = {
            every_owned_ship = {
                limit = {
                    is_ship_class = shipclass_military
                    is_ship_size = corvette
                }
                if = {
                    limit = {
                        exists = leader
                    }
                    leader = {
                        unassign_leader = this
                    }
                }
                delete_ship = this
            }
        }
    }

    option = {
        name = "aoe_pirate_actions.12.k"
        custom_tooltip = "aoe_pirate_actions.12.k.tooltip"
        ai_chance = {
            factor = 10
            modifier = {
                factor = 10
                has_ethic = "ethic_fanatic_pacifist"
            }
            modifier = {
                factor = 5
                has_ethic = "ethic_pacifist"
            }
            modifier = {
                factor = 10
                relative_power = {
                    who = event_target:replicant_country
                    category = fleet
                    value = inferior
                }
            }
            modifier = {
                factor = 5
                relative_power = {
                    who = event_target:replicant_country
                    category = fleet
                    value = pathetic
                }
            }
        }
        trigger = {
            has_country_flag = "replicant_demand_destroyer_ships"
            any_owned_fleet = {
                is_ship_class = shipclass_military
                is_ship_size = destroyer
            }
        }
        hidden_effect = {
            every_owned_ship = {
                limit = {
                    is_ship_class = shipclass_military
                    is_ship_size = destroyer
                }
                if = {
                    limit = {
                        exists = leader
                    }
                    leader = {
                        unassign_leader = this
                    }
                }
                delete_ship = this
            }
        }
    }

    option = {
        name = "aoe_pirate_actions.12.l"
        custom_tooltip = "aoe_pirate_actions.12.l.tooltip"
        ai_chance = {
            factor = 10
            modifier = {
                factor = 10
                has_ethic = "ethic_fanatic_pacifist"
            }
            modifier = {
                factor = 5
                has_ethic = "ethic_pacifist"
            }
            modifier = {
                factor = 10
                relative_power = {
                    who = event_target:replicant_country
                    category = fleet
                    value = inferior
                }
            }
            modifier = {
                factor = 5
                relative_power = {
                    who = event_target:replicant_country
                    category = fleet
                    value = pathetic
                }
            }
        }
        trigger = {
            has_country_flag = "replicant_demand_cruiser_ships"
            any_owned_fleet = {
                is_ship_class = shipclass_military
                is_ship_size = cruiser
            }
        }
        hidden_effect = {
            every_owned_ship = {
                limit = {
                    is_ship_class = shipclass_military
                    is_ship_size = cruiser
                }
                if = {
                    limit = {
                        exists = leader
                    }
                    leader = {
                        unassign_leader = this
                    }
                }
                delete_ship = this
            }
        }
    }

    option = {
        name = "aoe_pirate_actions.12.m"
        custom_tooltip = "aoe_pirate_actions.12.m.tooltip"
        ai_chance = {
            factor = 10
            modifier = {
                factor = 10
                has_ethic = "ethic_fanatic_pacifist"
            }
            modifier = {
                factor = 5
                has_ethic = "ethic_pacifist"
            }
            modifier = {
                factor = 10
                relative_power = {
                    who = event_target:replicant_country
                    category = fleet
                    value = inferior
                }
            }
            modifier = {
                factor = 5
                relative_power = {
                    who = event_target:replicant_country
                    category = fleet
                    value = pathetic
                }
            }
        }
        trigger = {
            has_country_flag = "replicant_demand_battleship_ships"
            any_owned_fleet = {
                is_ship_class = shipclass_military
                is_ship_size = battleship
            }
        }
        hidden_effect = {
            every_owned_ship = {
                limit = {
                    is_ship_class = shipclass_military
                    is_ship_size = battleship
                }
                if = {
                    limit = {
                        exists = leader
                    }
                    leader = {
                        unassign_leader = this
                    }
                }
                delete_ship = this
            }
        }
    }

    option = {
        name = "aoe_pirate_actions.12.n"
        custom_tooltip = "aoe_pirate_actions.12.n.tooltip"
        ai_chance = {
            factor = 10
            modifier = {
                factor = 10
                has_ethic = "ethic_fanatic_pacifist"
            }
            modifier = {
                factor = 5
                has_ethic = "ethic_pacifist"
            }
            modifier = {
                factor = 10
                relative_power = {
                    who = event_target:replicant_country
                    category = fleet
                    value = inferior
                }
            }
            modifier = {
                factor = 5
                relative_power = {
                    who = event_target:replicant_country
                    category = fleet
                    value = pathetic
                }
            }
        }
        trigger = {
            has_country_flag = "replicant_demand_colossus_ships"
            any_owned_fleet = {
                is_ship_class = shipclass_military
                is_ship_size = colossus
            }
        }
        hidden_effect = {
            every_owned_ship = {
                limit = {
                    is_ship_class = shipclass_military
                    is_ship_size = colossus
                }
                if = {
                    limit = {
                        exists = leader
                    }
                    leader = {
                        unassign_leader = this
                    }
                }
                delete_ship = this
            }
        }
    }

    option = {
        name = "aoe_pirate_actions.12.o"
        custom_tooltip = "aoe_pirate_actions.12.o.tooltip"
        ai_chance = {
            factor = 10
            modifier = {
                factor = 10
                has_ethic = "ethic_fanatic_pacifist"
            }
            modifier = {
                factor = 5
                has_ethic = "ethic_pacifist"
            }
            modifier = {
                factor = 10
                relative_power = {
                    who = event_target:replicant_country
                    category = fleet
                    value = inferior
                }
            }
            modifier = {
                factor = 5
                relative_power = {
                    who = event_target:replicant_country
                    category = fleet
                    value = pathetic
                }
            }
        }
        trigger = {
            has_country_flag = "replicant_demand_scientist_leaders"
            any_owned_leader = {
                leader_class = scientist
            }
        }
        hidden_effect = {
            every_owned_leader = {
                limit = {
                    leader_class = scientist
                }
                kill_leader = {
                    show_notification = no
                }
            }
        }
    }

    option = {
        name = "aoe_pirate_actions.12.p"
        custom_tooltip = "aoe_pirate_actions.12.p.tooltip"
        ai_chance = {
            factor = 10
            modifier = {
                factor = 10
                has_ethic = "ethic_fanatic_pacifist"
            }
            modifier = {
                factor = 5
                has_ethic = "ethic_pacifist"
            }
            modifier = {
                factor = 10
                relative_power = {
                    who = event_target:replicant_country
                    category = fleet
                    value = inferior
                }
            }
            modifier = {
                factor = 5
                relative_power = {
                    who = event_target:replicant_country
                    category = fleet
                    value = pathetic
                }
            }
        }
        trigger = {
            has_country_flag = "replicant_demand_admiral_leaders"
            any_owned_leader = {
                leader_class = admiral
            }
        }
        hidden_effect = {
            every_owned_leader = {
                limit = {
                    leader_class = admiral
                }
                kill_leader = {
                    show_notification = no
                }
            }
        }
    }

    option = {
        name = "aoe_pirate_actions.12.q"
        custom_tooltip = "aoe_pirate_actions.12.q.tooltip"
        ai_chance = {
            factor = 10
            modifier = {
                factor = 10
                has_ethic = "ethic_fanatic_pacifist"
            }
            modifier = {
                factor = 5
                has_ethic = "ethic_pacifist"
            }
            modifier = {
                factor = 10
                relative_power = {
                    who = event_target:replicant_country
                    category = fleet
                    value = inferior
                }
            }
            modifier = {
                factor = 5
                relative_power = {
                    who = event_target:replicant_country
                    category = fleet
                    value = pathetic
                }
            }
        }
        trigger = {
            has_country_flag = "replicant_demand_general_leaders"
            any_owned_leader = {
                leader_class = general
            }
        }
        hidden_effect = {
            every_owned_leader = {
                limit = {
                    leader_class = general
                }
                kill_leader = {
                    show_notification = no
                }
            }
        }
    }

    option = {
        name = "aoe_pirate_actions.12.r"
        custom_tooltip = "aoe_pirate_actions.12.r.tooltip"
        ai_chance = {
            factor = 10
            modifier = {
                factor = 10
                has_ethic = "ethic_fanatic_pacifist"
            }
            modifier = {
                factor = 5
                has_ethic = "ethic_pacifist"
            }
            modifier = {
                factor = 10
                relative_power = {
                    who = event_target:replicant_country
                    category = fleet
                    value = inferior
                }
            }
            modifier = {
                factor = 5
                relative_power = {
                    who = event_target:replicant_country
                    category = fleet
                    value = pathetic
                }
            }
        }
        trigger = {
            has_country_flag = "replicant_demand_governor_leaders"
            any_owned_leader = {
                leader_class = governor
            }
        }
        hidden_effect = {
            every_owned_leader = {
                limit = {
                    leader_class = governor
                }
                kill_leader = {
                    show_notification = no
                }
            }
        }
    }

    option = {
        name = "aoe_pirate_actions.12.s"
        custom_tooltip = "aoe_pirate_actions.12.s.tooltip"
        ai_chance = {
            factor = 10
            modifier = {
                factor = 10
                has_ethic = "ethic_fanatic_pacifist"
            }
            modifier = {
                factor = 5
                has_ethic = "ethic_pacifist"
            }
            modifier = {
                factor = 10
                relative_power = {
                    who = event_target:replicant_country
                    category = fleet
                    value = inferior
                }
            }
            modifier = {
                factor = 5
                relative_power = {
                    who = event_target:replicant_country
                    category = fleet
                    value = pathetic
                }
            }
        }
        trigger = {
            has_country_flag = "replicant_demand_system"
            exists = event_target:replicant_target_system
            event_target:replicant_target_system = {
                space_owner = {
                    is_same_value = root
                }
            }
        }
        hidden_effect = {
            event_target:replicant_target_system = {
                every_system_planet = {
                    limit = {
                        is_colony = yes
                        OR = {
                            is_owned_by = root
                            is_controlled_by = root
                        }
                    }
                    destroy_colony = yes
                    create_ambient_object = {
                        type = explosion_particle_object
                        location = this
                        use_3d_location = yes
                        duration = 10
                        scale = 20
                    }
                }
                every_fleet_in_system = {
                    limit = {
                        exists = owner
                        owner = {
                            is_same_value = root
                        }
                    }
                    if = {
                        limit = {
                            exists = leader
                        }
                        leader = {
                            kill_leader = {
                                show_notification = no
                            }
                        }
                    }
                    destroy_fleet = this
                }
            }
        }
    }

    option = {
        name = "aoe_pirate_actions.12.t"
        custom_tooltip = "aoe_pirate_actions.12.t.tooltip"
        ai_chance = {
            factor = 10
            modifier = {
                factor = 10
                has_ethic = "ethic_fanatic_pacifist"
            }
            modifier = {
                factor = 5
                has_ethic = "ethic_pacifist"
            }
            modifier = {
                factor = 10
                relative_power = {
                    who = event_target:replicant_country
                    category = fleet
                    value = inferior
                }
            }
            modifier = {
                factor = 5
                relative_power = {
                    who = event_target:replicant_country
                    category = fleet
                    value = pathetic
                }
            }
        }
        trigger = {
            has_country_flag = "replicant_demand_pops"
            exists = event_target:replicant_target_planet
            event_target:replicant_target_planet = {
                any_owned_pop = {
                    OR = {
                        is_unemployed = yes
                        is_enslaved = yes
                        is_being_purged = yes
                    }
                    happiness < 0.5
                }
            }
        }
        hidden_effect = {
            event_target:replicant_target_planet = {
                every_owned_pop = {
                    limit = {
                        OR = {
                            is_unemployed = yes
                            is_enslaved = yes
                            is_being_purged = yes
                        }
                        happiness < 0.5
                    }
                    kill_pop = yes
                }
            }
        }
    }

    # Replicant offensive fleet appearance
    option = {
        name = "aoe_pirate_actions.12.z"
        custom_tooltip = "aoe_pirate_actions.12.z.tooltip"
        response_text = "aoe_pirate_actions.12.z.response"
        hidden_effect = {
            event_target:replicant_country = {
                # Evasion counter
                if = {
                    limit = {
                        check_variable = {
                            which = "replicant_evasion_counter"
                            value > 0
                        }
                    }
                    change_variable = {
                        which = "replicant_evasion_counter"
                        value = 1
                    }
                }
                else = {
                    set_variable = {
                        which = "replicant_evasion_counter"
                        value = 1
                    }
                }
                # Fleets count
                set_variable = {
                    which = "replicant_fleet_size_pool"
                    value = 1
                }
                while = {
                    limit = {
                        check_variable = {
                            which = "replicant_evasion_counter"
                            value > 15
                        }
                    }
                    subtract_variable = {
                        which = "replicant_evasion_counter"
                        value = 15
                    }
                    change_variable = {
                        which = "replicant_fleet_size_pool"
                        value = 1
                    }
                }
                # Available fleets
                every_owned_fleet = {
                    limit = {
                        has_fleet_flag = "replicant_fleet_role_offensive"
                    }
                    if = {
                        limit = {
                            root = {
                                check_variable = {
                                    which = "replicant_fleet_size_pool"
                                    value > 0
                                }
                            }
                        }
                        root = {
                            subtract_variable = {
                                which = "replicant_fleet_size_pool"
                                value = 1
                            }
                        }
                    }
                }
                # Creating fleets
                set_variable = {
                    which = "replicant_evasion_multiplier"
                    value = 0
                }
                while = {
                    limit = {
                        check_variable = {
                            which = "replicant_fleet_size_pool"
                            value > 0
                        }
                    }
                    subtract_variable = {
                        which = "replicant_fleet_size_pool"
                        value = 1
                    }
                    if = {
                        limit = {
                            check_variable = {
                                which = "replicant_fleet_size_pool"
                                value > 0
                            }
                        }
                        change_variable = {
                            which = "replicant_evasion_multiplier"
                            value = 1
                        }
                    }
                    create_leader = {
                        class = admiral
                        species = owner_main_species
                        name = random
                        skill = 1
                        immortal = yes
                        traits = {
                            trait = "leader_trait_fanatical"
                            trait = random_trait
                        }
                    }
                    last_created_leader = {
                        if = {
                            limit = {
                                prev = {
                                    has_country_flag = "fe_pirate"
                                }
                            }
                            add_skill = 8
                        }
                        else_if = {
                            limit = {
                                prev = {
                                    has_country_flag = "robot_pirate"
                                }
                            }
                            add_skill = 7
                        }
                        else_if = {
                            limit = {
                                prev = {
                                    has_country_flag = "lithoid_pirate"
                                }
                            }
                            add_skill = 6
                        }
                        else = {
                            random_list = {
                                1 = {
                                    add_skill = 8
                                }
                                2 = {
                                    add_skill = 7
                                }
                                5 = {
                                    add_skill = 6
                                }
                                10 = {
                                    add_skill = 5
                                }
                                25 = {
                                    add_skill = 4
                                }
                                10 = {
                                    add_skill = 3
                                }
                                5 = {
                                    add_skill = 2
                                }
                                2 = {
                                    add_skill = 1
                                }
                                1 = {
                                }
                            }
                        }
                    }
                    create_fleet = {
                        name = "NAME_Pirate_Destroyer_Fleet"
                        effect = {
                            set_owner = prev
                            if = {
                                limit = {
                                    prev = {
                                        has_country_flag = "fe_pirate"
                                    }
                                }
                                random_list = {
                                    100 = {
                                        set_name = "NAME_Fallen_Empire_Pirate_Destroyer_Fleet_10"
                                        set_fleet_flag = "replicant_fleet_power_10"
                                        create_pirate_ships_10 = yes
                                    }
                                    75 = {
                                        set_name = "NAME_Fallen_Empire_Pirate_Destroyer_Fleet_11"
                                        set_fleet_flag = "replicant_fleet_power_11"
                                        create_pirate_ships_11 = yes
                                    }
                                    50 = {
                                        set_name = "NAME_Fallen_Empire_Pirate_Destroyer_Fleet_12"
                                        set_fleet_flag = "replicant_fleet_power_12"
                                        create_pirate_ships_12 = yes
                                    }
                                    25 = {
                                        set_name = "NAME_Fallen_Empire_Pirate_Destroyer_Fleet_13"
                                        set_fleet_flag = "replicant_fleet_power_13"
                                        create_pirate_ships_13 = yes
                                    }
                                    10 = {
                                        set_name = "NAME_Fallen_Empire_Pirate_Destroyer_Fleet_14"
                                        set_fleet_flag = "replicant_fleet_power_14"
                                        create_pirate_ships_14 = yes
                                    }
                                    5 = {
                                        set_name = "NAME_Fallen_Empire_Pirate_Destroyer_Fleet_15"
                                        set_fleet_flag = "replicant_fleet_power_15"
                                        create_pirate_ships_15 = yes
                                    }
                                }
                            }
                            else_if = {
                                limit = {
                                    prev = {
                                        has_country_flag = "robot_pirate"
                                    }
                                }
                                random_list = {
                                    100 = {
                                        set_name = "NAME_Robot_Pirate_Destroyer_Fleet_9"
                                        set_fleet_flag = "replicant_fleet_power_9"
                                        create_pirate_ships_9 = yes
                                    }
                                    75 = {
                                        set_name = "NAME_Robot_Pirate_Destroyer_Fleet_10"
                                        set_fleet_flag = "replicant_fleet_power_10"
                                        create_pirate_ships_10 = yes
                                    }
                                    50 = {
                                        set_name = "NAME_Robot_Pirate_Destroyer_Fleet_11"
                                        set_fleet_flag = "replicant_fleet_power_11"
                                        create_pirate_ships_11 = yes
                                    }
                                    25 = {
                                        set_name = "NAME_Robot_Pirate_Destroyer_Fleet_12"
                                        set_fleet_flag = "replicant_fleet_power_12"
                                        create_pirate_ships_12 = yes
                                    }
                                    10 = {
                                        set_name = "NAME_Robot_Pirate_Destroyer_Fleet_13"
                                        set_fleet_flag = "replicant_fleet_power_13"
                                        create_pirate_ships_13 = yes
                                    }
                                    5 = {
                                        set_name = "NAME_Robot_Pirate_Destroyer_Fleet_14"
                                        set_fleet_flag = "replicant_fleet_power_14"
                                        create_pirate_ships_14 = yes
                                    }
                                    1 = {
                                        set_name = "NAME_Robot_Pirate_Destroyer_Fleet_15"
                                        set_fleet_flag = "replicant_fleet_power_15"
                                        create_pirate_ships_15 = yes
                                    }
                                }
                            }
                            else_if = {
                                limit = {
                                    prev = {
                                        has_country_flag = "lithoid_pirate"
                                    }
                                }
                                random_list = {
                                    100 = {
                                        set_name = "NAME_Lithoid_Pirate_Destroyer_Fleet_8"
                                        set_fleet_flag = "replicant_fleet_power_8"
                                        create_pirate_ships_8 = yes
                                    }
                                    75 = {
                                        set_name = "NAME_Lithoid_Pirate_Destroyer_Fleet_9"
                                        set_fleet_flag = "replicant_fleet_power_9"
                                        create_pirate_ships_9 = yes
                                    }
                                    50 = {
                                        set_name = "NAME_Lithoid_Pirate_Destroyer_Fleet_10"
                                        set_fleet_flag = "replicant_fleet_power_10"
                                        create_pirate_ships_10 = yes
                                    }
                                    25 = {
                                        set_name = "NAME_Lithoid_Pirate_Destroyer_Fleet_11"
                                        set_fleet_flag = "replicant_fleet_power_11"
                                        create_pirate_ships_11 = yes
                                    }
                                    10 = {
                                        set_name = "NAME_Lithoid_Pirate_Destroyer_Fleet_12"
                                        set_fleet_flag = "replicant_fleet_power_12"
                                        create_pirate_ships_12 = yes
                                    }
                                    5 = {
                                        set_name = "NAME_Lithoid_Pirate_Destroyer_Fleet_13"
                                        set_fleet_flag = "replicant_fleet_power_13"
                                        create_pirate_ships_13 = yes
                                    }
                                    2 = {
                                        set_name = "NAME_Lithoid_Pirate_Destroyer_Fleet_14"
                                        set_fleet_flag = "replicant_fleet_power_14"
                                        create_pirate_ships_14 = yes
                                    }
                                    1 = {
                                        set_name = "NAME_Lithoid_Pirate_Destroyer_Fleet_15"
                                        set_fleet_flag = "replicant_fleet_power_15"
                                        create_pirate_ships_15 = yes
                                    }
                                }
                            }
                            else = {
                                if = {
                                    limit = {
                                        prev = {
                                            check_variable = {
                                                which = "replicant_fleet_size_pool"
                                                value > 0
                                            }
                                        }
                                    }
                                    set_name = "NAME_Pirate_Destroyer_Fleet_15"
                                    set_fleet_flag = "replicant_fleet_power_15"
                                    create_pirate_ships_15 = yes
                                }
                                else = {
                                    if = {
                                        limit = {
                                            prev = {
                                                check_variable = {
                                                    which = "replicant_evasion_counter"
                                                    value = 2
                                                }
                                            }
                                        }
                                        set_name = "NAME_Pirate_Destroyer_Fleet_2"
                                        set_fleet_flag = "replicant_fleet_power_2"
                                        create_pirate_ships_2 = yes
                                    }
                                    else_if = {
                                        limit = {
                                            prev = {
                                                check_variable = {
                                                    which = "replicant_evasion_counter"
                                                    value = 3
                                                }
                                            }
                                        }
                                        set_name = "NAME_Pirate_Destroyer_Fleet_3"
                                        set_fleet_flag = "replicant_fleet_power_3"
                                        create_pirate_ships_3 = yes
                                    }
                                    else_if = {
                                        limit = {
                                            prev = {
                                                check_variable = {
                                                    which = "replicant_evasion_counter"
                                                    value = 4
                                                }
                                            }
                                        }
                                        set_name = "NAME_Pirate_Destroyer_Fleet_4"
                                        set_fleet_flag = "replicant_fleet_power_4"
                                        create_pirate_ships_4 = yes
                                    }
                                    else_if = {
                                        limit = {
                                            prev = {
                                                check_variable = {
                                                    which = "replicant_evasion_counter"
                                                    value = 5
                                                }
                                            }
                                        }
                                        set_name = "NAME_Pirate_Destroyer_Fleet_5"
                                        set_fleet_flag = "replicant_fleet_power_5"
                                        create_pirate_ships_5 = yes
                                    }
                                    else_if = {
                                        limit = {
                                            prev = {
                                                check_variable = {
                                                    which = "replicant_evasion_counter"
                                                    value = 6
                                                }
                                            }
                                        }
                                        set_name = "NAME_Pirate_Destroyer_Fleet_6"
                                        set_fleet_flag = "replicant_fleet_power_6"
                                        create_pirate_ships_6 = yes
                                    }
                                    else_if = {
                                        limit = {
                                            prev = {
                                                check_variable = {
                                                    which = "replicant_evasion_counter"
                                                    value = 7
                                                }
                                            }
                                        }
                                        set_name = "NAME_Pirate_Destroyer_Fleet_7"
                                        set_fleet_flag = "replicant_fleet_power_7"
                                        create_pirate_ships_7 = yes
                                    }
                                    else_if = {
                                        limit = {
                                            prev = {
                                                check_variable = {
                                                    which = "replicant_evasion_counter"
                                                    value = 8
                                                }
                                            }
                                        }
                                        set_name = "NAME_Pirate_Destroyer_Fleet_8"
                                        set_fleet_flag = "replicant_fleet_power_8"
                                        create_pirate_ships_8 = yes
                                    }
                                    else_if = {
                                        limit = {
                                            prev = {
                                                check_variable = {
                                                    which = "replicant_evasion_counter"
                                                    value = 9
                                                }
                                            }
                                        }
                                        set_name = "NAME_Pirate_Destroyer_Fleet_9"
                                        set_fleet_flag = "replicant_fleet_power_9"
                                        create_pirate_ships_9 = yes
                                    }
                                    else_if = {
                                        limit = {
                                            prev = {
                                                check_variable = {
                                                    which = "replicant_evasion_counter"
                                                    value = 10
                                                }
                                            }
                                        }
                                        set_name = "NAME_Pirate_Destroyer_Fleet_10"
                                        set_fleet_flag = "replicant_fleet_power_10"
                                        create_pirate_ships_10 = yes
                                    }
                                    else_if = {
                                        limit = {
                                            prev = {
                                                check_variable = {
                                                    which = "replicant_evasion_counter"
                                                    value = 11
                                                }
                                            }
                                        }
                                        set_name = "NAME_Pirate_Destroyer_Fleet_11"
                                        set_fleet_flag = "replicant_fleet_power_11"
                                        create_pirate_ships_11 = yes
                                    }
                                    else_if = {
                                        limit = {
                                            prev = {
                                                check_variable = {
                                                    which = "replicant_evasion_counter"
                                                    value = 12
                                                }
                                            }
                                        }
                                        set_name = "NAME_Pirate_Destroyer_Fleet_12"
                                        set_fleet_flag = "replicant_fleet_power_12"
                                        create_pirate_ships_12 = yes
                                    }
                                    else_if = {
                                        limit = {
                                            prev = {
                                                check_variable = {
                                                    which = "replicant_evasion_counter"
                                                    value = 13
                                                }
                                            }
                                        }
                                        set_name = "NAME_Pirate_Destroyer_Fleet_13"
                                        set_fleet_flag = "replicant_fleet_power_13"
                                        create_pirate_ships_13 = yes
                                    }
                                    else_if = {
                                        limit = {
                                            prev = {
                                                check_variable = {
                                                    which = "replicant_evasion_counter"
                                                    value = 14
                                                }
                                            }
                                        }
                                        set_name = "NAME_Pirate_Destroyer_Fleet_14"
                                        set_fleet_flag = "replicant_fleet_power_14"
                                        create_pirate_ships_14 = yes
                                    }
                                    else_if = {
                                        limit = {
                                            prev = {
                                                check_variable = {
                                                    which = "replicant_evasion_counter"
                                                    value = 15
                                                }
                                            }
                                        }
                                        set_name = "NAME_Pirate_Destroyer_Fleet_15"
                                        set_fleet_flag = "replicant_fleet_power_15"
                                        create_pirate_ships_15 = yes
                                    }
                                    else = {
                                        set_name = "NAME_Pirate_Destroyer_Fleet_1"
                                        set_fleet_flag = "replicant_fleet_power_1"
                                        create_pirate_ships_1 = yes
                                    }
                                }
                            }
                            assign_leader = last_created_leader
                            set_location = {
                                target = event_target:replicant_system.star
                                distance = 100
                                angle = random
                            }
                            set_fleet_stance = aggressive
                            set_aggro_range_measure_from = self
                            set_aggro_range = 800
                            set_fleet_flag = "replicant_fleet_role_offensive"
                        }
                        settings = {
                            uses_naval_capacity = no
                        }
                    }
                }
                while = {
                    limit = {
                        check_variable = {
                            which = "replicant_evasion_multiplier"
                            value > 0
                        }
                    }
                    subtract_variable = {
                        which = "replicant_evasion_multiplier"
                        value = 1
                    }
                    change_variable = {
                        which = "replicant_evasion_counter"
                        value = 15
                    }
                }
                # Sending fleets to the target system
                every_owned_fleet = {
                    limit = {
                        has_fleet_flag = "replicant_fleet_role_offensive"
                    }
                    clear_fleet_actions = this
                    fleet_event = {
                        id = aoe_pirate_actions.22
                        days = 30
                        random = 20
                    }
                }
            }
        }
    }
}

# Replicant combat fleet won the battle
# This = owner of fleet 1 (combatant)
# From = owner of fleet 2 (destroyed)
# FromFrom = fleet 1
# FromFromFrom = fleet 2
country_event = {
    id = aoe_pirate_actions.15
    is_triggered_only = yes
    hide_window = yes

    trigger = {
        is_country_type = "replicant"
        fromfrom = {
            has_fleet_flag = "replicant_fleet_role_combative"
        }
    }

    immediate = {
        random_owned_starbase = {
            fleet.solar_system = {
                star = {
                    save_event_target_as = replicant_fleet_target
                }
            }
        }
        fromfrom = {
            clear_fleet_actions = this
            remove_fleet_flag = "replicant_fleet_role_combative"
            set_fleet_flag = "replicant_fleet_role_defensive"
            if = {
                limit = {
                    has_hp_percentage < 0.95
                }
                auto_move_to_planet = {
                    target = event_target:replicant_fleet_target
                    clear_auto_move_on_arrival = no
                    arrival_effect = replicant_fleet_repair_effect
                }
            }
            else = {
                auto_move_to_planet = {
                    target = event_target:replicant_fleet_target
                    clear_auto_move_on_arrival = no
                    arrival_effect = replicant_fleet_patrol_effect
                }
            }
        }
    }
}

# The fleet of random country won the battle against replicants fleet
# This = owner of fleet 1 (combatant)
# From = owner of fleet 2 (destroyed)
# FromFrom = fleet 1
# FromFromFrom = fleet 2
country_event = {
    id = aoe_pirate_actions.16
    is_triggered_only = yes
    hide_window = yes

    trigger = {
        from = {
            is_country_type = "replicant"
        }
        fromfromfrom = {
            is_ship_class = shipclass_military
        }
    }

    immediate = {
        if = {
            limit = {
                fromfromfrom = {
                    has_fleet_flag = "replicant_fleet_power_15"
                }
            }
            if = {
                limit = {
                    fromfrom = {
                        exists = leader
                    }
                }
                fromfrom = {
                    leader = {
                        add_experience = 3000
                    }
                }
            }
            add_resource = {
                influence = 800
                unity = 800
            }
        }
        else_if = {
            limit = {
                fromfromfrom = {
                    has_fleet_flag = "replicant_fleet_power_14"
                }
            }
            if = {
                limit = {
                    fromfrom = {
                        exists = leader
                    }
                }
                fromfrom = {
                    leader = {
                        add_experience = 2800
                    }
                }
            }
            add_resource = {
                influence = 750
                unity = 750
            }
        }
        else_if = {
            limit = {
                fromfromfrom = {
                    has_fleet_flag = "replicant_fleet_power_13"
                }
            }
            if = {
                limit = {
                    fromfrom = {
                        exists = leader
                    }
                }
                fromfrom = {
                    leader = {
                        add_experience = 2600
                    }
                }
            }
            add_resource = {
                influence = 700
                unity = 700
            }
        }
        else_if = {
            limit = {
                fromfromfrom = {
                    has_fleet_flag = "replicant_fleet_power_12"
                }
            }
            if = {
                limit = {
                    fromfrom = {
                        exists = leader
                    }
                }
                fromfrom = {
                    leader = {
                        add_experience = 2400
                    }
                }
            }
            add_resource = {
                influence = 650
                unity = 650
            }
        }
        else_if = {
            limit = {
                fromfromfrom = {
                    has_fleet_flag = "replicant_fleet_power_11"
                }
            }
            if = {
                limit = {
                    fromfrom = {
                        exists = leader
                    }
                }
                fromfrom = {
                    leader = {
                        add_experience = 2200
                    }
                }
            }
            add_resource = {
                influence = 600
                unity = 600
            }
        }
        else_if = {
            limit = {
                fromfromfrom = {
                    has_fleet_flag = "replicant_fleet_power_10"
                }
            }
            if = {
                limit = {
                    fromfrom = {
                        exists = leader
                    }
                }
                fromfrom = {
                    leader = {
                        add_experience = 2000
                    }
                }
            }
            add_resource = {
                influence = 550
                unity = 550
            }
        }
        else_if = {
            limit = {
                fromfromfrom = {
                    has_fleet_flag = "replicant_fleet_power_9"
                }
            }
            if = {
                limit = {
                    fromfrom = {
                        exists = leader
                    }
                }
                fromfrom = {
                    leader = {
                        add_experience = 1800
                    }
                }
            }
            add_resource = {
                influence = 500
                unity = 500
            }
        }
        else_if = {
            limit = {
                fromfromfrom = {
                    has_fleet_flag = "replicant_fleet_power_8"
                }
            }
            if = {
                limit = {
                    fromfrom = {
                        exists = leader
                    }
                }
                fromfrom = {
                    leader = {
                        add_experience = 1600
                    }
                }
            }
            add_resource = {
                influence = 450
                unity = 450
            }
        }
        else_if = {
            limit = {
                fromfromfrom = {
                    has_fleet_flag = "replicant_fleet_power_7"
                }
            }
            if = {
                limit = {
                    fromfrom = {
                        exists = leader
                    }
                }
                fromfrom = {
                    leader = {
                        add_experience = 1400
                    }
                }
            }
            add_resource = {
                influence = 400
                unity = 400
            }
        }
        else_if = {
            limit = {
                fromfromfrom = {
                    has_fleet_flag = "replicant_fleet_power_6"
                }
            }
            if = {
                limit = {
                    fromfrom = {
                        exists = leader
                    }
                }
                fromfrom = {
                    leader = {
                        add_experience = 1200
                    }
                }
            }
            add_resource = {
                influence = 350
                unity = 350
            }
        }
        else_if = {
            limit = {
                fromfromfrom = {
                    has_fleet_flag = "replicant_fleet_power_5"
                }
            }
            if = {
                limit = {
                    fromfrom = {
                        exists = leader
                    }
                }
                fromfrom = {
                    leader = {
                        add_experience = 1000
                    }
                }
            }
            add_resource = {
                influence = 300
                unity = 300
            }
        }
        else_if = {
            limit = {
                fromfromfrom = {
                    has_fleet_flag = "replicant_fleet_power_4"
                }
            }
            if = {
                limit = {
                    fromfrom = {
                        exists = leader
                    }
                }
                fromfrom = {
                    leader = {
                        add_experience = 800
                    }
                }
            }
            add_resource = {
                influence = 250
                unity = 250
            }
        }
        else_if = {
            limit = {
                fromfromfrom = {
                    has_fleet_flag = "replicant_fleet_power_3"
                }
            }
            if = {
                limit = {
                    fromfrom = {
                        exists = leader
                    }
                }
                fromfrom = {
                    leader = {
                        add_experience = 600
                    }
                }
            }
            add_resource = {
                influence = 200
                unity = 200
            }
        }
        else_if = {
            limit = {
                fromfromfrom = {
                    has_fleet_flag = "replicant_fleet_power_2"
                }
            }
            if = {
                limit = {
                    fromfrom = {
                        exists = leader
                    }
                }
                fromfrom = {
                    leader = {
                        add_experience = 400
                    }
                }
            }
            add_resource = {
                influence = 150
                unity = 150
            }
        }
        else = {
            if = {
                limit = {
                    fromfrom = {
                        exists = leader
                    }
                }
                fromfrom = {
                    leader = {
                        add_experience = 200
                    }
                }
            }
            add_resource = {
                influence = 100
                unity = 100
            }
        }
    }
}

# Random country encountered with a replicant country
ship_event = {
    id = aoe_pirate_actions.17
    is_triggered_only = yes
    hide_window = yes

    trigger = {
        exists = owner
        OR = {
            from = {
                exists = starbase
                starbase = {
                    exists = owner
                    owner = {
                        is_country_type = "replicant"
                        NOT = {
                            has_communications = fromfrom
                        }
                    }
                }
            }
            from = {
                any_neighbor_system = {
                    exists = starbase
                    starbase = {
                        exists = owner
                        owner = {
                            is_country_type = "replicant"
                            NOT = {
                                has_communications = fromfrom
                            }
                        }
                    }
                }
            }
        }
    }

    immediate = {
        if = {
            limit = {
                from = {
                    exists = starbase
                    starbase = {
                        exists = owner
                        owner = {
                            is_country_type = "replicant"
                        }
                    }
                }
            }
            from = {
                starbase = {
                    owner = {
                        establish_communications_no_message = fromfrom
                    }
                }
            }
        }
        else = {
            from = {
                random_neighbor_system = {
                    limit = {
                        exists = starbase
                        starbase = {
                            exists = owner
                            owner = {
                                is_country_type = "replicant"
                            }
                        }
                    }
                    starbase = {
                        owner = {
                            establish_communications_no_message = fromfrom
                        }
                    }
                }
            }
        }
    }
}

# Replicant last ship of fleet destroyed
# This = owner of ship 1 (destroyed)
# From = owner of ship 2 (combatant)
# FromFrom = ship 1
# FromFromFrom = ship 2
country_event = {
    id = aoe_pirate_actions.18
    is_triggered_only = yes
    hide_window = yes

    trigger = {
        is_country_type = "replicant"
        fromfrom = {
            exists = leader
            fleet = {
                num_ships = 0
            }
        }
    }

    immediate = {
        random_list = {
            65 = {}
            35 = {
                modifier = {
                    factor = 0
                    NOT = {
                        any_owned_starbase = {
                            always = yes
                        }
                    }
                }
                modifier = {
                    factor = 1.1
                    fromfrom.leader = {
                        has_level = 2
                    }
                }
                modifier = {
                    factor = 1.2
                    fromfrom.leader = {
                        has_level = 3
                    }
                }
                modifier = {
                    factor = 1.3
                    fromfrom.leader = {
                        has_level = 4
                    }
                }
                modifier = {
                    factor = 1.4
                    fromfrom.leader = {
                        has_level = 5
                    }
                }
                modifier = {
                    factor = 1.5
                    fromfrom.leader = {
                        has_level > 5
                    }
                }
                fromfrom = {
                    leader = {
                        exile_leader_as = replicant_leader_escaped
                    }
                }
                random_owned_starbase = {
                    fleet.solar_system = {
                        star = {
                            save_event_target_as = replicant_fleet_target
                        }
                    }
                }
                create_fleet = {
                    name = "NAME_Pirate_Escape_Fleet"
                    effect = {
                        set_owner = prev
                        create_ship_design = {
                            design = "NAME_Dagger"
                        }
                        create_ship = {
                            name = "NAME_Pirate_Escape_Ship"
                            design = last_created_design
                            effect = {
                                set_disable_at_health = 0.05
                                set_ship_flag = "replicant_ship_escaped"
                            }
                        }
                        set_location = {
                            target = fromfrom
                            distance = 75
                            angle = random
                        }
                        set_fleet_stance = passive
                        set_aggro_range_measure_from = self
                        set_aggro_range = 1
                        set_leader = replicant_leader_escaped
                        add_modifier = {
                            modifier = "escape_speed_boost"
                            days = 10
                        }
                        auto_move_to_planet = {
                            target = event_target:replicant_fleet_target
                            arrival_effect = replicant_fleet_dismiss_effect
                            clear_auto_move_on_arrival = no
                        }
                    }
                    settings = {
                        is_boss = yes
                        spawn_debris = yes
                        uses_naval_capacity = no
                    }
                }
                log = ">>> aoe_pirate_actions.18: escape fleet created at [FromFrom.solar_system.GetName] system and moving to the [event_target:replicant_fleet_target.GetName] system"
            }
        }
    }
}

# Replicant escape ship with admiral disabled
# This = Ship
# From = Disabler ship
ship_event = {
    id = aoe_pirate_actions.19
    is_triggered_only = yes
    hide_window = yes

    trigger = {
        has_ship_flag = "replicant_ship_escaped"
    }

    immediate = {
        if = {
            limit = {
                from = {
                    exists = owner
                }
                exists = owner
                owner = {
                    is_country_type = "replicant"
                    has_country_flag = replicant_country@from.owner
                }
            }
            from = {
                owner = {
                    country_event = {
                        id = aoe_pirate_actions.30
                        days = 2
                    }
                }
            }
        }
        else = {
            set_disabled = no
            fleet = {
                if = {
                    limit = {
                        exists = leader
                    }
                    leader = {
                        kill_leader = {
                            show_notification = no
                        }
                    }
                }
                set_event_locked = no
                destroy_fleet = this
            }
        }
    }
}

# Replicant defensive fleet actions
fleet_event = {
    id = aoe_pirate_actions.20
    is_triggered_only = yes
    hide_window = yes

    trigger = {
        exists = this
        exists = owner
        has_fleet_flag = "replicant_fleet_role_defensive"
    }

    immediate = {
        # Returning to base for repairing
        if = {
            limit = {
                has_hp_percentage < 0.95
            }
            auto_move_to_planet = {
                target = event_target:replicant_system.star
                clear_auto_move_on_arrival = no
                arrival_effect = replicant_fleet_repair_effect
            }
        }
        else_if = { # Our home system is under attack
            limit = {
                NOT = {
                    solar_system = {
                        exists = space_owner
                        space_owner = {
                            is_same_value = root.owner
                        }
                    }
                }
                owner = {
                    any_owned_starbase = {
                        solar_system = {
                            any_ship_in_system = {
                                exists = owner
                                owner = {
                                    NOT = {
                                        is_same_value = root.owner
                                    }
                                }
                            }
                        }
                    }
                }
            }
            owner = {
                random_owned_starbase = {
                    limit = {
                        solar_system = {
                            any_ship_in_system = {
                                exists = owner
                                owner = {
                                    NOT = {
                                        is_same_value = root.owner
                                    }
                                }
                            }
                        }
                    }
                    solar_system = {
                        star = {
                            save_event_target_as = replicant_fleet_target
                        }
                    }
                }
            }
            auto_move_to_planet = {
                target = event_target:replicant_fleet_target
                clear_auto_move_on_arrival = no
                arrival_effect = replicant_fleet_patrol_effect
            }
        }
        else_if = { # We are in the system with hostile ships
            limit = {
                solar_system = {
                    any_ship_in_system = {
                        exists = owner
                        owner = {
                            NOR = {
                                is_same_value = root.owner
                                is_country_type = "replicant"
                            }
                        }
                    }
                }
            }
            solar_system = {
                random_fleet_in_system = {
                    limit = {
                        exists = owner
                        owner = {
                            NOR = {
                                is_same_value = root.owner
                                is_country_type = "replicant"
                            }
                        }
                    }
                    save_event_target_as = replicant_fleet_target
                }
            }
            remove_fleet_flag = "replicant_fleet_role_defensive"
            set_fleet_flag = "replicant_fleet_role_combative"
            auto_follow_fleet = {
                target = event_target:replicant_fleet_target
                attack_fleet = yes
            }
        }
        else_if = { # We are in the neighbour habitable system and any planet in this system has an station
            limit = {
                solar_system = {
                    exists = space_owner
                    space_owner = {
                        NOT = {
                            is_same_value = root.owner
                        }
                    }
                    any_system_planet = {
                        OR = {
                            has_mining_station = yes
                            has_research_station = yes
                            has_observation_outpost = yes
                        }
                    }
                }
            }
            solar_system = {
                random_system_planet = {
                    limit = {
                        OR = {
                            has_mining_station = yes
                            has_research_station = yes
                            has_observation_outpost = yes
                        }
                    }
                    save_event_target_as = replicant_fleet_target
                }
            }
            auto_move_to_planet = {
                target = event_target:replicant_fleet_target
                clear_auto_move_on_arrival = no
                arrival_effect = replicant_fleet_patrol_effect
            }
        }
        else_if = { # We are in the home system and exists any neighbour system with any hostile ship
            limit = {
                solar_system = {
                    exists = space_owner
                    space_owner = {
                        is_same_value = root.owner
                    }
                    any_neighbor_system = {
                        any_ship_in_system = {
                            exists = owner
                            owner = {
                                NOT = {
                                    is_same_value = root.owner
                                }
                            }
                        }
                    }
                }
            }
            solar_system = {
                random_neighbor_system = {
                    limit = {
                        any_ship_in_system = {
                            exists = owner
                            owner = {
                                NOT = {
                                    is_same_value = root.owner
                                }
                            }
                        }
                    }
                    if = {
                        limit = {
                            any_ship_in_system = {
                                exists = owner
                                owner = {
                                    NOT = {
                                        is_same_value = root.owner
                                    }
                                }
                                exists = orbit
                            }
                        }
                        random_fleet_in_system = {
                            limit = {
                                exists = owner
                                owner = {
                                    NOT = {
                                        is_same_value = root.owner
                                    }
                                }
                                any_owned_ship = {
                                    exists = orbit
                                }
                            }
                            random_owned_ship = {
                                limit = {
                                    exists = orbit
                                }
                                orbit = {
                                    save_event_target_as = replicant_fleet_target
                                }
                            }
                        }
                    }
                    else = {
                        star = {
                            save_event_target_as = replicant_fleet_target
                        }
                    }
                }
            }
            auto_move_to_planet = {
                target = event_target:replicant_fleet_target
                clear_auto_move_on_arrival = no
                arrival_effect = replicant_fleet_patrol_effect
            }
        }
        else_if = { # We are in the home system and exists any neighbour system
            limit = {
                solar_system = {
                    exists = space_owner
                    space_owner = {
                        is_same_value = root.owner
                    }
                    any_neighbor_system = {
                        always = yes
                    }
                }
            }
            random_list = {
                30 = {
                    modifier = {
                        factor = 0
                        NAND = {
                            exists = orbit
                            solar_system = {
                                any_system_planet = {
                                    NOT = {
                                        is_same_value = root.orbit
                                    }
                                }
                            }
                        }
                    }
                    modifier = {
                        factor = 3
                        NOT = {
                            solar_system = {
                                any_ship_in_system = {
                                    fleet = {
                                        NOT = {
                                            is_same_value = root
                                        }
                                    }
                                    exists = owner
                                    owner = {
                                        is_same_value = root.owner
                                    }
                                    exists = orbit
                                }
                            }
                        }
                    }
                    solar_system = {
                        random_system_planet = {
                            limit = {
                                NOT = {
                                    is_same_value = root.orbit
                                }
                            }
                            save_event_target_as = replicant_fleet_target
                        }
                    }
                }
                70 = {
                    solar_system = {
                        random_neighbor_system = {
                            star = {
                                save_event_target_as = replicant_fleet_target
                            }
                        }
                    }
                }
            }
            auto_move_to_planet = {
                target = event_target:replicant_fleet_target
                clear_auto_move_on_arrival = no
                arrival_effect = replicant_fleet_patrol_effect
            }
        }
        else_if = { # We are in the orbit of any planet in our home system and no one neighbour system exists
            limit = {
                solar_system = {
                    exists = space_owner
                    space_owner = {
                        is_same_value = root.owner
                    }
                }
            }
            if = {
                limit = {
                    exists = orbit
                }
                if = {
                    limit = {
                        solar_system = {
                            any_system_planet = {
                                NOT = {
                                    is_same_value = root.orbit
                                }
                            }
                        }
                    }
                    solar_system = {
                        random_system_planet = {
                            limit = {
                                NOT = {
                                    is_same_value = root.orbit
                                }
                            }
                            save_event_target_as = replicant_fleet_target
                        }
                    }
                }
            }
            else = {
                solar_system = {
                    random_system_planet = {
                        save_event_target_as = replicant_fleet_target
                    }
                }
            }
            auto_move_to_planet = {
                target = event_target:replicant_fleet_target
                clear_auto_move_on_arrival = no
                arrival_effect = replicant_fleet_patrol_effect
            }
        }
        else_if = { # We are in the neighbour system
            limit = {
                solar_system = {
                    any_neighbor_system = {
                        exists = space_owner
                        space_owner = {
                            is_same_value = root.owner
                        }
                    }
                }
            }
            random_list = {
                70 = {
                    modifier = {
                        factor = 0
                        NAND = {
                            exists = orbit
                            solar_system = {
                                any_system_planet = {
                                    NOT = {
                                        is_same_value = root.orbit
                                    }
                                }
                            }
                        }
                    }
                    solar_system = {
                        random_system_planet = {
                            limit = {
                                NOT = {
                                    is_same_value = root.orbit
                                }
                            }
                            save_event_target_as = replicant_fleet_target
                        }
                    }
                }
                30 = {
                    solar_system = {
                        random_neighbor_system = {
                            limit = {
                                exists = space_owner
                                space_owner = {
                                    is_same_value = root.owner
                                }
                            }
                            random_system_planet = {
                                save_event_target_as = replicant_fleet_target
                            }
                        }
                    }
                }
            }
            auto_move_to_planet = {
                target = event_target:replicant_fleet_target
                clear_auto_move_on_arrival = no
                arrival_effect = replicant_fleet_patrol_effect
            }
        }
        else_if = { # Where we are?
            limit = {
                solar_system = {
                    closest_system = {
                        limit = {
                            exists = space_owner
                            space_owner = {
                                is_same_value = root.owner
                            }
                            exists = spaceport
                            spaceport = {
                                exists = owner
                                owner = {
                                    is_same_value = root.owner
                                }
                            }
                        }
                        max_steps = 15
                    }
                }
            }
            solar_system = {
                closest_system = {
                    limit = {
                        exists = space_owner
                        space_owner = {
                            is_same_value = root.owner
                        }
                        exists = spaceport
                        spaceport = {
                            exists = owner
                            owner = {
                                is_same_value = root.owner
                            }
                        }
                    }
                    max_steps = 15
                    star = {
                        save_event_target_as = replicant_fleet_target
                    }
                }
            }
            auto_move_to_planet = {
                target = event_target:replicant_fleet_target
                clear_auto_move_on_arrival = no
                arrival_effect = replicant_fleet_repair_effect
            }
        }
        else = {
            if = {
                limit = {
                    exists = leader
                }
                leader = {
                    kill_leader = {
                        show_notification = no
                    }
                }
            }
            destroy_fleet = this
        }
    }
}

# Replicant defensive fleet repaired
fleet_event = {
    id = aoe_pirate_actions.21
    is_triggered_only = yes
    hide_window = yes

    trigger = {
        exists = this
        exists = owner
        has_fleet_flag = "replicant_fleet_role_defensive"
    }

    immediate = {
        owner = {
            every_owned_ship = {
                limit = {
                    exists = fleet
                    fleet = {
                        is_same_value = root
                    }
                }
                set_disabled = no
                repair_ship = yes
            }
        }

        fleet_event = {
            id = aoe_pirate_actions.20
            days = 10
            random = 8
        }
    }
}

# Replicant offensive fleet actions
fleet_event = {
    id = aoe_pirate_actions.22
    is_triggered_only = yes
    hide_window = yes

    trigger = {
        exists = this
        exists = owner
        has_fleet_flag = "replicant_fleet_role_offensive"
    }

    immediate = {
        log = ">>> aoe_pirate_actions.22: fleet moving"
        # We are in the target system and in the system exists any mining station
        if = {
            limit = {
                exists = owner
                solar_system = {
                    has_star_flag = replicant_target_system@root.owner
                    any_system_planet = {
                        OR = {
                            has_mining_station = yes
                            has_research_station = yes
                            has_observation_outpost = yes
                        }
                    }
                }
            }
            solar_system = {
                random_system_planet = {
                    limit = {
                        OR = {
                            has_mining_station = yes
                            has_research_station = yes
                            has_observation_outpost = yes
                        }
                    }
                    save_event_target_as = replicant_fleet_target
                }
            }
            auto_move_to_planet = {
                target = event_target:replicant_fleet_target
                clear_auto_move_on_arrival = no
                arrival_effect = replicant_fleet_destroy_effect
            }
        }
        else_if = { # We are in the target system or target`s neighbor system and in the neighbor system exists target`s hostile fleet
            limit = {
                exists = owner
                solar_system = {
                    any_neighbor_system = {
                        any_ship_in_system = {
                            exists = owner
                            owner = {
                                has_country_flag = replicant_target_country@root.owner
                            }
                        }
                        OR = {
                            has_star_flag = replicant_target_system@root.owner
                            any_neighbor_system = {
                                has_star_flag = replicant_target_system@root.owner
                            }
                        }
                    }
                }
            }
            solar_system = {
                random_neighbor_system = {
                    limit = {
                        any_ship_in_system = {
                            exists = owner
                            owner = {
                                has_country_flag = replicant_target_country@root.owner
                            }
                        }
                        OR = {
                            has_star_flag = replicant_target_system@root.owner
                            any_neighbor_system = {
                                has_star_flag = replicant_target_system@root.owner
                            }
                        }
                    }
                    if = {
                        limit = {
                            any_ship_in_system = {
                                exists = orbit
                                exists = owner
                                owner = {
                                    has_country_flag = replicant_target_country@root.owner
                                }
                            }
                        }
                        random_fleet_in_system = {
                            limit = {
                                exists = owner
                                owner = {
                                    has_country_flag = replicant_target_country@root.owner
                                }
                                any_owned_ship = {
                                    exists = orbit
                                }
                            }
                            orbit = {
                                save_event_target_as = replicant_fleet_target
                            }
                        }
                    }
                    else = {
                        star = {
                            save_event_target_as = replicant_fleet_target
                        }
                    }
                }
            }
            auto_move_to_planet = {
                target = event_target:replicant_fleet_target
                clear_auto_move_on_arrival = no
                arrival_effect = replicant_fleet_destroy_effect
            }
        }
        else_if = { # We are in the target system and any neighbor system belongs to target country
            limit = {
                exists = owner
                solar_system = {
                    has_star_flag = replicant_target_system@root.owner
                    any_neighbor_system = {
                        exists = space_owner
                        space_owner = {
                            has_country_flag = replicant_target_country@root.owner
                        }
                    }
                }
            }
            solar_system = {
                random_neighbor_system = {
                    limit = {
                        exists = space_owner
                        space_owner = {
                            has_country_flag = replicant_target_country@root.owner
                        }
                    }
                    star = {
                        save_event_target_as = replicant_fleet_target
                    }
                }
            }
            auto_move_to_planet = {
                target = event_target:replicant_fleet_target
                clear_auto_move_on_arrival = no
                arrival_effect = replicant_fleet_destroy_effect
            }
        }
        else_if = { # We are in the target`s neighbor system and in the system exists any mining station
            limit = {
                exists = owner
                solar_system = {
                    exists = space_owner
                    space_owner = {
                        has_country_flag = replicant_target_country@root.owner
                    }
                    any_neighbor_system = {
                        has_star_flag = replicant_target_system@root.owner
                    }
                    any_system_planet = {
                        OR = {
                            has_mining_station = yes
                            has_research_station = yes
                            has_observation_outpost = yes
                        }
                    }
                }
            }
            solar_system = {
                random_system_planet = {
                    limit = {
                        OR = {
                            has_mining_station = yes
                            has_research_station = yes
                            has_observation_outpost = yes
                        }
                    }
                    save_event_target_as = replicant_fleet_target
                }
            }
            auto_move_to_planet = {
                target = event_target:replicant_fleet_target
                clear_auto_move_on_arrival = no
                arrival_effect = replicant_fleet_destroy_effect
            }
        }
        else_if = { # We are in the orbit of any planet in the target system
            limit = {
                exists = owner
                exists = orbit
                solar_system = {
                    has_star_flag = replicant_target_system@root.owner
                }
            }
            solar_system = {
                random_system_planet = {
                    limit = {
                        NOT = {
                            is_same_value = root.orbit
                        }
                    }
                    save_event_target_as = replicant_fleet_target
                }
            }
            auto_move_to_planet = {
                target = event_target:replicant_fleet_target
                clear_auto_move_on_arrival = no
                arrival_effect = replicant_fleet_destroy_effect
            }
        }
        else_if = { # We are somewhere in the target system
            limit = {
                exists = owner
                solar_system = {
                    has_star_flag = replicant_target_system@root.owner
                }
            }
            solar_system = {
                random_system_planet = {
                    save_event_target_as = replicant_fleet_target
                }
            }
            auto_move_to_planet = {
                target = event_target:replicant_fleet_target
                clear_auto_move_on_arrival = no
                arrival_effect = replicant_fleet_destroy_effect
            }
        }
        else_if = { # We are not in the target system, but that`s system exists
            limit = {
                exists = owner
                owner = {
                    any_country = {
                        has_country_flag = replicant_target_country@root.owner
                        any_system_within_border = {
                            has_star_flag = replicant_target_system@root.owner
                        }
                    }
                }
            }
            owner = {
                random_country = {
                    limit = {
                        has_country_flag = replicant_target_country@root.owner
                    }
                    random_system_within_border = {
                        limit = {
                            has_star_flag = replicant_target_system@root.owner
                        }
                        star = {
                            save_event_target_as = replicant_fleet_target
                        }
                    }
                }
            }
            auto_move_to_planet = {
                target = event_target:replicant_fleet_target
                clear_auto_move_on_arrival = no
                arrival_effect = replicant_fleet_destroy_effect
            }
        }
        else_if = { # Target does not exists and we are returning to base
            limit = {
                exists = owner
                owner = {
                    any_owned_starbase = {
                        always = yes
                    }
                }
            }
            owner = {
                random_owned_starbase = {
                    fleet.solar_system = {
                        star = {
                            save_event_target_as = replicant_fleet_target
                        }
                    }
                }
            }
            remove_fleet_flag = "replicant_fleet_role_offensive"
            auto_move_to_planet = {
                target = event_target:replicant_fleet_target
                clear_auto_move_on_arrival = no
                arrival_effect = replicant_fleet_dismiss_effect
            }
        }
        else = {
            if = {
                limit = {
                    exists = leader
                }
                leader = {
                    kill_leader = {
                        show_notification = no
                    }
                }
            }
            destroy_fleet = this
        }
    }
}

# Replicant offensive fleet dismissed
fleet_event = {
    id = aoe_pirate_actions.23
    is_triggered_only = yes
    hide_window = yes

    immediate = {
        delete_fleet = this
    }
}

# Replicant research fleet actions
fleet_event = {
    id = aoe_pirate_actions.24
    is_triggered_only = yes
    hide_window = yes

    trigger = {
        exists = this
        exists = owner
        has_fleet_flag = "replicant_fleet_role_researching"
    }

    immediate = {
        if = {
            limit = {
                exists = orbit
            }
            solar_system = {
                random_system_planet = {
                    limit = {
                        is_star = no
                        NOT = {
                            is_same_value = root.orbit
                        }
                    }
                    save_event_target_as = replicant_fleet_target
                }
            }
            auto_move_to_planet = {
                target = event_target:replicant_fleet_target
                clear_auto_move_on_arrival = no
                arrival_effect = replicant_fleet_research_effect
            }
        }
        else = {
            solar_system = {
                random_system_planet = {
                    limit = {
                        is_star = no
                    }
                    save_event_target_as = replicant_fleet_target
                }
            }
            auto_move_to_planet = {
                target = event_target:replicant_fleet_target
                clear_auto_move_on_arrival = no
                arrival_effect = replicant_fleet_research_effect
            }
        }
    }
}

# Replicant admiral rescue project
# From: Disabled ship
country_event = {
    id = aoe_pirate_actions.30
    title = aoe_pirate_actions.30.title
    show_sound = event_radio_chatter
    is_triggered_only = yes
    diplomatic = yes

    desc = aoe_pirate_actions.30.desc_01
    desc = aoe_pirate_actions.30.desc_02
    desc = aoe_pirate_actions.30.desc_03

    picture_event_data = {
        portrait = from.owner
        room = replicant_starbase_2_room
    }

    option = {
        name = aoe_pirate_actions.30.a
        custom_tooltip = aoe_pirate_actions.30.a.tooltip
        trigger = {
            has_event_chain = "replicant_chain"
            NOR = {
                has_special_project = "aoe_replicant_leader_rescue_admiral_project"
                has_completed_event_chain_counter = {
                    event_chain = "replicant_chain"
                    counter = "replicant_leader_admiral_saved_counter"
                }
            }
        }
        hidden_effect = {
            from = {
                enable_special_project = {
                    name = "aoe_replicant_leader_rescue_admiral_project"
                    location = this
                    owner = root
                }
            }
        }
    }

    option = {
        name = aoe_pirate_actions.30.b
        custom_tooltip = aoe_pirate_actions.30.b.tooltip
        trigger = {
            has_event_chain = "replicant_chain"
            has_special_project = "aoe_replicant_leader_rescue_admiral_project"
        }
        hidden_effect = {
            abort_special_project = "aoe_replicant_leader_rescue_admiral_project"
            from = {
                enable_special_project = {
                    name = "aoe_replicant_leader_rescue_admiral_project"
                    location = this
                    owner = root
                }
            }
        }
    }

    option = {
        name = aoe_pirate_actions.30.c
        custom_tooltip = aoe_pirate_actions.30.c.tooltip
        hidden_effect = {
            from = {
                set_disabled = no
                fleet = {
                    if = {
                        limit = {
                            exists = leader
                        }
                        leader = {
                            kill_leader = {
                                show_notification = no
                            }
                        }
                    }
                    set_event_locked = no
                    destroy_fleet = this
                }
            }
        }
    }
}

# Replicant admiral saved
# FromFrom: Disabled ship
country_event = {
    id = aoe_pirate_actions.31
    title = aoe_pirate_actions.31.title
    desc = aoe_pirate_actions.31.desc
    show_sound = event_mystic_reveal_light
    is_triggered_only = yes
    diplomatic = yes

    picture_event_data = {
        portrait = fromfrom.owner
        room = replicant_starbase_3_room
    }

    option = {
        name = aoe_pirate_actions.31.a
        custom_tooltip = aoe_pirate_actions.31.a.tooltip
        trigger = {
            has_event_chain = "replicant_chain"
            NOT = {
                has_completed_event_chain_counter = {
                    event_chain = "replicant_chain"
                    counter = "replicant_leader_admiral_saved_counter"
                }
            }
            fromfrom = {
                exists = leader
            }
        }
        hidden_effect = {
            random_list = {
                65 = {
                    capital_scope = {
                        create_pop = {
                            species = fromfrom.leader.species
                        }
                        if = {
                            limit = {
                                root.owner_species = {
                                    has_citizenship_type = {
                                        country = root
                                        type = citizenship_slavery
                                    }
                                }
                            }
                            last_created_pop = {
                                set_citizenship_type = {
                                    type = citizenship_slavery
                                    cooldown = yes
                                }
                            }
                        }
                    }
                    fromfrom = {
                        set_disabled = no
                        fleet = {
                            leader = {
                                kill_leader = {
                                    show_notification = no
                                }
                            }
                            set_event_locked = no
                            set_owner = root
                        }
                    }
                }
                35 = {
                    fromfrom = {
                        set_disabled = no
                        fleet = {
                            set_event_locked = no
                            set_owner = root
                        }
                    }
                }
            }
            add_event_chain_counter = {
                event_chain = "replicant_chain"
                counter = "replicant_leader_admiral_saved_counter"
                amount = 1
            }
            if = {
                limit = {
                    has_completed_event_chain_counter = {
                        event_chain = "replicant_chain"
                        counter = "replicant_leader_admiral_saved_counter"
                    }
                }
                random_country = {
                    limit = {
                        is_country_type = "replicant"
                        has_country_flag = replicant_country@root
                    }
                    set_country_flag = "replicant_leader_admiral_exhausted"
                }
            }
        }
    }

    option = {
        name = aoe_pirate_actions.31.b
        custom_tooltip = aoe_pirate_actions.31.b.tooltip
        hidden_effect = {
            fromfrom = {
                set_disabled = no
                fleet = {
                    if = {
                        limit = {
                            exists = leader
                        }
                        leader = {
                            kill_leader = {
                                show_notification = no
                            }
                        }
                    }
                    set_event_locked = no
                    set_owner = root
                }
            }
        }
    }
}

# Replicant general revealed
# From: planet
country_event = {
    id = aoe_pirate_actions.32
    title = aoe_pirate_actions.32.title
    show_sound = event_mystic_reveal_light
    is_triggered_only = yes
    diplomatic = yes

    desc = aoe_pirate_actions.32.desc_01
    desc = aoe_pirate_actions.32.desc_02
    desc = aoe_pirate_actions.32.desc_03

    picture_event_data = {
        portrait = root
        room = replicant_hideout_1_room
    }

    immediate = {
        from = {
            set_timed_planet_flag = {
                flag = "replicant_pop_cooldown"
                days = 1200
            }
        }
    }

    option = {
        name = aoe_pirate_actions.32.a
        custom_tooltip = aoe_pirate_actions.32.a.tooltip
        trigger = {
            has_event_chain = "replicant_chain"
            NOT = {
                has_completed_event_chain_counter = {
                    event_chain = "replicant_chain"
                    counter = "replicant_leader_general_saved_counter"
                }
            }
            from = {
                any_owned_pop = {
                    has_pop_flag = "replicant_leader"
                }
            }
        }
        hidden_effect = {
            random_list = {
                75 = {
                    from = {
                        random_owned_pop = {
                            limit = {
                                has_pop_flag = "replicant_leader"
                            }
                            remove_pop_flag = "replicant_leader"
                        }
                    }
                }
                25 = {
                    from = {
                        random_owned_pop = {
                            limit = {
                                has_pop_flag = "replicant_leader"
                            }
                            remove_pop_flag = "replicant_leader"
                            kill_pop = yes
                        }
                        owner = {
                            create_leader = {
                                class = general
                                name = random
                                species = owner_main_species
                                skill = 1
                                traits = {
                                    trait = random
                                }
                            }
                            last_created_leader = {
                                add_experience = 500
                            }
                        }
                    }
                }
            }
            add_event_chain_counter = {
                event_chain = "replicant_chain"
                counter = "replicant_leader_general_saved_counter"
                amount = 1
            }
            if = {
                limit = {
                    has_completed_event_chain_counter = {
                        event_chain = "replicant_chain"
                        counter = "replicant_leader_general_saved_counter"
                    }
                }
                random_country = {
                    limit = {
                        is_country_type = "replicant"
                        has_country_flag = replicant_country@root
                    }
                    set_country_flag = "replicant_leader_general_exhausted"
                }
            }
        }
    }

    option = {
        name = aoe_pirate_actions.32.b
        custom_tooltip = aoe_pirate_actions.32.b.tooltip
        add_resource = {
            influence = 100
        }
        hidden_effect = {
            from = {
                random_owned_pop = {
                    limit = {
                        has_pop_flag = "replicant_leader"
                    }
                    remove_pop_flag = "replicant_leader"
                    kill_pop = yes
                }
            }
        }
    }
}

# Replicant general escaped
# FromFrom: planet
country_event = {
    id = aoe_pirate_actions.33
    title = aoe_pirate_actions.33.title
    show_sound = event_ship_thrusters
    is_triggered_only = yes
    diplomatic = yes

    desc = aoe_pirate_actions.33.desc_01
    desc = aoe_pirate_actions.33.desc_02
    desc = aoe_pirate_actions.33.desc_03

    picture_event_data = {
        portrait = root
        room = replicant_starbase_3_room
    }

    trigger = {
        fromfrom = {
            any_owned_pop = {
                has_pop_flag = "replicant_leader"
            }
        }
    }

    immediate = {
        fromfrom = {
            random_owned_pop = {
                limit = {
                    has_pop_flag = "replicant_leader"
                }
                remove_pop_flag = "replicant_leader"
                kill_pop = yes
            }
        }
        create_message = {
            type = MESSAGE_REPLICANT_SPY
            localization = MESSAGE_REPLICANT_SPY_ESCAPED_LOCALISATION
            days = 30
            target = this
            variable = { type = name localization = ORIGIN_PLANET scope = fromfrom }
            variable = { type = name localization = ORIGIN_SYSTEM scope = fromfrom.solar_system }
        }
    }

    option = {
        name = aoe_pirate_actions.33.a
        custom_tooltip = aoe_pirate_actions.33.a.tooltip
    }
}

# Replicant digsite appearance
# From: country
planet_event = {
    id = aoe_pirate_actions.40
    is_triggered_only = yes
    fire_only_once = yes
    hide_window = yes

    trigger = {
        exists = event_target:replicant_country
        exists = event_target:replicant_digsite
    }

    immediate = {
        create_archaeological_site = "replicant_digsite"
        create_pirate_science_fleet = {
            FORCE = 1
        }
    }
}

# Replicant digsite became visible
# From: site
country_event = {
    id = aoe_pirate_actions.41
    is_triggered_only = yes
    hide_window = yes

    trigger = {
        any_country = {
            is_country_type = "replicant"
            has_country_flag = replicant_country@root
        }
    }

    immediate = {
        random_country = {
            limit = {
                is_country_type = "replicant"
                has_country_flag = replicant_country@root
            }
            save_event_target_as = "replicant_country"
        }
        from.planet = {
            save_event_target_as = "replicant_digsite"
        }
        country_event = {
            id = aoe_pirate_actions.42
            days = 30
            random = 20
        }
    }
}

# Replicant country warning about digsite
country_event = {
    id = aoe_pirate_actions.42
    title = aoe_pirate_actions.42.title
    show_sound = event_radio_chatter
    is_triggered_only = yes
    diplomatic = yes

    desc = {
        trigger = {
            event_target:replicant_digsite = {
                solar_system = {
                    any_ship_in_system = {
                        exists = owner
                        owner = {
                            is_same_value = root
                        }
                    }
                }
            }
        }
        text = aoe_pirate_actions.42.desc_01
    }

    desc = {
        trigger = {
            event_target:replicant_digsite = {
                solar_system = {
                    any_ship_in_system = {
                        exists = owner
                        owner = {
                            is_same_value = event_target:replicant_country
                        }
                    }
                }
            }
        }
        text = aoe_pirate_actions.42.desc_02
    }

    desc = {
        trigger = {
            event_target:replicant_digsite = {
                solar_system = {
                    NOT = {
                        any_ship_in_system = {
                            exists = owner
                            owner = {
                                OR = {
                                    is_same_value = root
                                    is_same_value = event_target:replicant_country
                                }
                            }
                        }
                    }
                }
            }
        }
        text = aoe_pirate_actions.42.desc_03
    }

    picture_event_data = {
        portrait = event_target:replicant_country
        room = replicant_starbase_1_room
    }

    trigger = {
        exists = event_target:replicant_country
        exists = event_target:replicant_digsite
    }

    option = {
        name = aoe_pirate_actions.42.a
        custom_tooltip = aoe_pirate_actions.42.a.tooltip
        response_text = aoe_pirate_actions.42.a.response
        hidden_effect = {
            if = {
                limit = {
                    exists_pirate_science_fleet = no
                }
                create_pirate_science_fleet = {
                    FORCE = 2
                }
            }
        }
    }

    option = {
        name = aoe_pirate_actions.42.b
        custom_tooltip = aoe_pirate_actions.42.b.tooltip
        response_text = aoe_pirate_actions.42.b.response
        trigger = {
            has_resource = {
                type = unity
                amount >= 100
            }
        }
        add_resource = {
            unity = -100
        }
    }
}

fleet_event = {
    id = aoe_pirate_actions.51
    title = aoe_pirate_actions.51.title
    desc = aoe_pirate_actions.51.desc
    picture = GFX_aoe_replicant_digsite_1
    show_sound = event_ship_thrusters
    is_triggered_only = yes
    location = from
    archaeology = yes

    immediate = {
        fromfrom = {
            set_site_progress_locked = yes
        }
        if = {
            limit = {
                any_country = {
                    is_country_type = "replicant"
                    has_country_flag = replicant_country@root.owner
                }
            }
            random_country = {
                limit = {
                    is_country_type = "replicant"
                    has_country_flag = replicant_country@root.owner
                }
                save_event_target_as = "replicant_country"
            }
            if = {
                limit = {
                    exists_pirate_science_fleet = no
                }
                fromfrom.planet = {
                    save_event_target_as = "replicant_digsite"
                }
                create_pirate_science_fleet = {
                    FORCE = 3
                }
            }
        }
    }

    after = {
        fromfrom = {
            set_site_progress_locked = no
        }
    }

    option = {
        name = site_success
        allow = {
            owner = {
                resource_stockpile_compare = {
                    resource = energy
                    value >= 500
                }
            }
        }
        owner = {
            add_resource = {
                energy = -500
            }
        }
        fromfrom = {
            add_stage_clues = 3
        }
    }

    option = {
        name = site_delay
        fromfrom = {
            add_stage_clues = -3
        }
    }
}

fleet_event = {
    id = aoe_pirate_actions.52
    title = aoe_pirate_actions.52.title
    desc = aoe_pirate_actions.52.desc
    picture = GFX_aoe_replicant_digsite_2
    show_sound = event_ship_bridge
    is_triggered_only = yes
    location = from
    archaeology = yes

    immediate = {
        fromfrom = {
            set_site_progress_locked = yes
        }
        if = {
            limit = {
                any_country = {
                    is_country_type = "replicant"
                    has_country_flag = replicant_country@root.owner
                }
            }
            random_country = {
                limit = {
                    is_country_type = "replicant"
                    has_country_flag = replicant_country@root.owner
                }
                save_event_target_as = "replicant_country"
            }
            if = {
                limit = {
                    exists_pirate_science_fleet = no
                }
                fromfrom.planet = {
                    save_event_target_as = "replicant_digsite"
                }
                create_pirate_science_fleet = {
                    FORCE = 4
                }
            }
        }
    }

    after = {
        fromfrom = {
            set_site_progress_locked = no
        }
    }

    option = {
        name = site_success
        allow = {
            owner = {
                resource_stockpile_compare = {
                    resource = allows
                    value >= 300
                }
            }
        }
        owner = {
            add_resource = {
                allows = -300
            }
        }
        fromfrom = {
            add_stage_clues = 2
        }
    }

    option = {
        name = site_delay
        fromfrom = {
            add_stage_clues = -2
        }
    }
}

fleet_event = {
    id = aoe_pirate_actions.53
    title = aoe_pirate_actions.53.title
    desc = aoe_pirate_actions.53.desc
    picture = GFX_aoe_replicant_digsite_3
    show_sound = event_dangerous_animals
    is_triggered_only = yes
    location = from
    archaeology = yes

    immediate = {
        fromfrom = {
            set_site_progress_locked = yes
        }
        if = {
            limit = {
                any_country = {
                    is_country_type = "replicant"
                    has_country_flag = replicant_country@root.owner
                }
            }
            random_country = {
                limit = {
                    is_country_type = "replicant"
                    has_country_flag = replicant_country@root.owner
                }
                save_event_target_as = "replicant_country"
            }
            if = {
                limit = {
                    exists_pirate_science_fleet = no
                }
                fromfrom.planet = {
                    save_event_target_as = "replicant_digsite"
                }
                create_pirate_science_fleet = {
                    FORCE = 5
                }
            }
        }
    }

    after = {
        fromfrom = {
            set_site_progress_locked = no
        }
    }

    option = {
        name = site_success
        allow = {
            leader = {
                has_level >= 3
            }
        }
        fromfrom = {
            add_stage_clues = 1
        }
    }

    option = {
        name = site_delay
        fromfrom = {
            add_stage_clues = -1
        }
    }
}

fleet_event = {
    id = aoe_pirate_actions.54
    title = aoe_pirate_actions.54.title
    desc = aoe_pirate_actions.54.desc
    picture = GFX_aoe_replicant_digsite_4
    show_sound = event_collapsing_ruins
    is_triggered_only = yes
    location = from
    archaeology = yes

    immediate = {
        fromfrom = {
            set_site_progress_locked = yes
        }
    }

    after = {
        fromfrom = {
            set_site_progress_locked = no
        }
        if = {
            limit = {
                any_country = {
                    is_country_type = "replicant"
                    has_country_flag = replicant_country@root.owner
                }
            }
            random_country = {
                limit = {
                    is_country_type = "replicant"
                    has_country_flag = replicant_country@root.owner
                }
                save_event_target_as = "replicant_country"
            }
            if = {
                limit = {
                    exists_pirate_science_fleet = no
                }
                fromfrom.planet = {
                    save_event_target_as = "replicant_digsite"
                }
                create_pirate_science_fleet = {
                    FORCE = 6
                }
            }
        }
    }

    option = {
        name = site_success
        allow = {
            leader = {
                has_level >= 4
            }
        }
        fromfrom = {
            add_stage_clues = 2
        }
        small_artifact_reward = yes
    }

    option = {
        name = site_delay
        fromfrom = {
            add_stage_clues = -2
        }
    }
}

fleet_event = {
    id = aoe_pirate_actions.55
    title = aoe_pirate_actions.55.title
    desc = aoe_pirate_actions.55.desc
    picture = GFX_aoe_replicant_digsite_5
    show_sound = event_mystic_reveal
    is_triggered_only = yes
    location = from
    archaeology = yes

    immediate = {
        fromfrom = {
            set_site_progress_locked = yes
        }
    }

    after = {
        fromfrom = {
            set_site_progress_locked = no
        }
        if = {
            limit = {
                any_country = {
                    is_country_type = "replicant"
                    has_country_flag = replicant_country@root.owner
                }
            }
            random_country = {
                limit = {
                    is_country_type = "replicant"
                    has_country_flag = replicant_country@root.owner
                }
                save_event_target_as = "replicant_country"
            }
            if = {
                limit = {
                    exists_pirate_science_fleet = no
                }
                fromfrom.planet = {
                    save_event_target_as = "replicant_digsite"
                }
                create_pirate_science_fleet = {
                    FORCE = 7
                }
            }
        }
    }

    option = {
        name = site_success
        allow = {
            leader = {
                has_level >= 5
            }
        }
        fromfrom = {
            add_stage_clues = 1
        }
        medium_artifact_reward = yes
    }

    option = {
        name = site_delay
        fromfrom = {
            add_stage_clues = -2
        }
    }
}

fleet_event = {
    id = aoe_pirate_actions.56
    title = aoe_pirate_actions.56.title
    desc = aoe_pirate_actions.56.desc
    picture = GFX_aoe_replicant_digsite_6
    show_sound = event_finding_loot
    is_triggered_only = yes
    location = from
    archaeology = yes

    immediate = {
        fromfrom = {
            set_site_progress_locked = yes
        }
        solar_system = {
            every_system_ambient_object = {
                limit = {
                    has_ambient_object_flag = "replicant_ambient_object"
                }
                destroy_ambient_object = this
            }
        }
    }

    after = {
        fromfrom = {
            set_site_progress_locked = no
        }
    }

    option = {
        name = site_success
        large_artifact_reward = yes
    }
}

fleet_event = {
    id = aoe_pirate_actions.57
    title = aoe_pirate_actions.57.title
    desc = aoe_pirate_actions.57.desc
    picture = GFX_aoe_replicant_digsite_7
    show_sound = event_screams
    is_triggered_only = yes
    location = from
    archaeology = yes

    immediate = {
        fromfrom = {
            set_site_progress_locked = yes
        }
        leader = {
            kill_leader = {
                show_notification = yes
            }
        }
        destroy_fleet = this
    }

    after = {
        fromfrom = {
            set_site_progress_locked = no
        }
    }

    option = {
        name = aoe_pirate_actions.57.a
        custom_tooltip = aoe_pirate_actions.57.a.tooltip
    }
}